(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{526:function(t,a,s){"use strict";s.r(a);var e=s(65),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[t._v("#")]),t._v(" Linux")]),t._v(" "),s("h3",{attrs:{id:"文件管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件管理"}},[t._v("#")]),t._v(" "),s("strong",[t._v("文件管理")])]),t._v(" "),s("blockquote",[s("p",[t._v("d rwx rwx rwx. 2 root root    34 6月  21 16:47 aslic")]),t._v(" "),s("ol",[s("li",[t._v("类型  d: 文件夹  -: 文件  l: 软连接")]),t._v(" "),s("li",[t._v("权限  所有者  所属组  其他人")]),t._v(" "),s("li",[t._v("文件大小")]),t._v(" "),s("li",[t._v("创建时间")]),t._v(" "),s("li",[t._v("文件名")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://apaiimages.oss-cn-guangzhou.aliyuncs.com/MD/image-20220622092610669.png",alt:"image-20220622092610669"}})]),t._v(" "),s("h3",{attrs:{id:"配置全路径名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置全路径名"}},[t._v("#")]),t._v(" 配置全路径名")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://apaiimages.oss-cn-guangzhou.aliyuncs.com/MD/image-20220627105046702.png",alt:"image-20220627105046702"}})]),t._v(" "),s("ul",[s("li",[t._v("在 etc 目录下的 profile 文件下修改")])]),t._v(" "),s("blockquote",[s("p",[t._v("配置全路径名:")]),t._v(" "),s("ul",[s("li",[t._v("export PS1='[\\u@\\h $PWD]$'")])]),t._v(" "),s("p",[t._v("export JAVA_HOME=/root/jdk8\nexport PATH=$JAVA_HOME/bin:$PATH")])]),t._v(" "),s("h3",{attrs:{id:"linux-系统-固定-ip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-系统-固定-ip"}},[t._v("#")]),t._v(" Linux 系统 固定 - IP")]),t._v(" "),s("p",[t._v("进入 网络配置文件")]),t._v(" "),s("blockquote",[s("p",[t._v("/etc/sysconfig/network-scripts")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://apaiimages.oss-cn-guangzhou.aliyuncs.com/MD/image-20220715140917720.png",alt:"image-20220715140917720"}})]),t._v(" "),s("p",[t._v("修改为:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("TYPE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ethernet"')]),t._v("\nPROXY_METHOD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),t._v("\nBROWSER_ONLY"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no"')]),t._v("\nBOOTPROTO"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"static"')]),t._v("\nDEFROUTE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yes"')]),t._v("\nIPV4_FAILURE_FATAL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no"')]),t._v("\nIPV6INIT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yes"')]),t._v("\nIPV6_AUTOCONF"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yes"')]),t._v("\nIPV6_DEFROUTE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yes"')]),t._v("\nIPV6_FAILURE_FATAL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no"')]),t._v("\nIPV6_ADDR_GEN_MODE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stable-privacy"')]),t._v("\nNAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ens33"')]),t._v("\nUUID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a83c1999-f7ee-4517-848a-071a0a1bb834"')]),t._v("\nDEVICE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ens33"')]),t._v("\nONBOOT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yes"')]),t._v("\nBROADCAST"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".255")]),t._v("\nIPADDR"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".174")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".130")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态的 IP 地址")]),t._v("\nNETMASK"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255.255")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".255")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),t._v("\nGATEWAY"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("\n")])])]),s("p",[t._v("刷新配置 重新使用静态ip连接")]),t._v(" "),s("blockquote",[s("p",[t._v("service network restart")])]),t._v(" "),s("h2",{attrs:{id:"linux-文件与目录管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-文件与目录管理"}},[t._v("#")]),t._v(" Linux 文件与目录管理")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("绝对路径：")]),t._v("\n路径的写法，由根目录 "),s("strong",[t._v("/")]),t._v(" 写起，")]),t._v(" "),s("blockquote",[s("p",[t._v("例如： /usr/share/doc 这个目录。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("相对路径：")]),t._v("\n路径的写法，不是由 "),s("strong",[t._v("/")]),t._v(" 写起，")]),t._v(" "),s("blockquote",[s("p",[t._v("例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成： "),s("strong",[t._v("cd ../man")]),t._v(" 这就是相对路径的写法。")])])])]),t._v(" "),s("h3",{attrs:{id:"处理目录的常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理目录的常用命令"}},[t._v("#")]),t._v(" 处理目录的常用命令")]),t._v(" "),s("h4",{attrs:{id:"ls-列出目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ls-列出目录"}},[t._v("#")]),t._v(" ls (列出目录)")]),t._v(" "),s("blockquote",[s("p",[t._v("ls（英文全拼：list files）: 列出目录及文件名")])]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## ls [-aAdfFhilnrRSt] 目录名称\n[root@www ~]## ls [--color={never,auto,always}] 目录名称\n[root@www ~]## ls [--full-time] 目录名称\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-a ：全部的文件，连同隐藏文件( 开头为 . 的文件) 一起列出来(常用)")]),t._v(" "),s("li",[t._v("-d ：仅列出目录本身，而不是列出目录内的文件数据(常用)")]),t._v(" "),s("li",[t._v("-l ：长数据串列出，包含文件的属性与权限等等数据；(常用)")])]),t._v(" "),s("p",[t._v("将家目录下的所有文件列出来(含属性与隐藏档)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## ls -al ~\n")])])]),s("h4",{attrs:{id:"cd-切换目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cd-切换目录"}},[t._v("#")]),t._v(" cd (切换目录)")]),t._v(" "),s("blockquote",[s("p",[t._v("cd  是Change Directory的缩写，这是用来变换工作目录的命令。")])]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-linux extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// cd [相对路径或绝对路径]\n#使用 mkdir 命令创建 runoob 目录\n[root@www ~]## mkdir runoob\n\n#使用绝对路径切换到 runoob 目录\n[root@www ~]## cd /root/runoob/\n\n#使用相对路径切换到 runoob 目录\n[root@www ~]## cd ./runoob/\n\n## 表示回到自己的家目录，亦即是 /root 这个目录\n[root@www runoob]## cd ~\n\n## 表示去到目前的上一级目录，亦即是 /root 的上一级目录的意思；\n[root@www ~]## cd ..\n")])])]),s("h4",{attrs:{id:"pwd-显示目前所在的目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pwd-显示目前所在的目录"}},[t._v("#")]),t._v(" pwd (显示目前所在的目录)")]),t._v(" "),s("blockquote",[s("p",[t._v("pwd 是 "),s("strong",[t._v("Print Working Directory")]),t._v(" 的缩写，也就是显示目前所在目录的命令。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## pwd [-P]\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("-P")]),t._v(" ：显示出确实的路径，而非使用连结 (link) 路径。")])]),t._v(" "),s("p",[t._v("实例：单纯显示出目前的工作目录：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## pwd\n/root   <== 显示出目录啦～\n")])])]),s("p",[t._v("实例显示出实际的工作目录，而非连结档本身的目录名而已。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## cd /var/mail   <== 注意，/var/mail是一个连结档\n[root@www mail]## pwd\n/var/mail         <==列出目前的工作目录\n[root@www mail]## pwd -P\n/var/spool/mail   <==怎么回事？有没有加 -P 差很多～\n[root@www mail]## ls -ld /var/mail\nlrwxrwxrwx 1 root root 10 Sep  4 17:54 /var/mail -> spool/mail\n## 看到这里应该知道为啥了吧？因为 /var/mail 是连结档，连结到 /var/spool/mail \n## 所以，加上 pwd -P 的选项后，会不以连结档的数据显示，而是显示正确的完整路径啊！\n")])])]),s("h4",{attrs:{id:"mkdir-创建新目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mkdir-创建新目录"}},[t._v("#")]),t._v(" mkdir (创建新目录)")]),t._v(" "),s("blockquote",[s("p",[t._v("mkdir (make directory)  创建新的目录")])]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mkdir [-mp] 目录名称\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-m ：配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色～")]),t._v(" "),s("li",[t._v("-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！")])]),t._v(" "),s("p",[t._v("实例：请到/tmp底下尝试创建数个新目录看看：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## cd /tmp\n[root@www tmp]## mkdir test    <==创建一名为 test 的新目录\n[root@www tmp]## mkdir test1/test2/test3/test4\nmkdir: cannot create directory `test1/test2/test3/test4': \nNo such file or directory       <== 没办法直接创建此目录啊！\n[root@www tmp]## mkdir -p test1/test2/test3/test4\n")])])]),s("p",[t._v("加了这个 -p 的选项，可以自行帮你创建多层目录！")]),t._v(" "),s("p",[t._v("实例：创建权限为 "),s("strong",[t._v("rwx--x--x")]),t._v(" 的目录。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]## mkdir -m 711 test2\n[root@www tmp]## ls -l\ndrwxr-xr-x  3 root  root 4096 Jul 18 12:50 test\ndrwxr-xr-x  3 root  root 4096 Jul 18 12:53 test1\ndrwx--x--x  2 root  root 4096 Jul 18 12:54 test2\n")])])]),s("p",[t._v("上面的权限部分，如果没有加上 -m 来强制配置属性，系统会使用默认属性。")]),t._v(" "),s("p",[t._v("如果我们使用 -m ，如上例我们给予 -m 711 来给予新的目录 drwx--x--x 的权限。")]),t._v(" "),s("h4",{attrs:{id:"touch-创建新文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#touch-创建新文件"}},[t._v("#")]),t._v(" touch (创建新文件)")]),t._v(" "),s("blockquote",[s("p",[t._v("touch   创建新的文件")])]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// touch 文件名\ntouch test.txt\n")])])]),s("h4",{attrs:{id:"rmdir-删除空的目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rmdir-删除空的目录"}},[t._v("#")]),t._v(" rmdir (删除空的目录)")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" rmdir [-p] 目录名称\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("**-p ：**从该目录起，一次删除多级空目录")])]),t._v(" "),s("p",[t._v("删除 runoob 目录")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]## rmdir runoob/\n")])])]),s("p",[t._v("将 mkdir 实例中创建的目录(/tmp 底下)删除掉！")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]## ls -l   <==看看有多少目录存在？\ndrwxr-xr-x  3 root  root 4096 Jul 18 12:50 test\ndrwxr-xr-x  3 root  root 4096 Jul 18 12:53 test1\ndrwx--x--x  2 root  root 4096 Jul 18 12:54 test2\n[root@www tmp]## rmdir test   <==可直接删除掉，没问题\n[root@www tmp]## rmdir test1  <==因为尚有内容，所以无法删除！\nrmdir: `test1': Directory not empty\n[root@www tmp]## rmdir -p test1/test2/test3/test4\n[root@www tmp]## ls -l        <==您看看，底下的输出中test与test1不见了！\ndrwx--x--x  2 root  root 4096 Jul 18 12:54 test2\n")])])]),s("p",[t._v("利用 -p 这个选项，立刻就可以将 test1/test2/test3/test4 一次删除。")]),t._v(" "),s("p",[t._v("不过要注意的是，这个 rmdir 仅能删除空的目录，你可以使用 rm 命令来删除非空目录。")]),t._v(" "),s("h4",{attrs:{id:"cp-复制文件或目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cp-复制文件或目录"}},[t._v("#")]),t._v(" cp (复制文件或目录)")]),t._v(" "),s("blockquote",[s("p",[t._v("cp 即拷贝文件和目录。")])]),t._v(" "),s("p",[t._v("语法:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## cp [-adfilprsu] 来源档(source) 目标档(destination)\n[root@www ~]## cp [options] source1 source2 source3 .... directory\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("**-a：**相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)")]),t._v(" "),s("li",[t._v("**-d：**若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；")]),t._v(" "),s("li",[t._v("**-f：**为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；")]),t._v(" "),s("li",[t._v("**-i：**若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)")]),t._v(" "),s("li",[t._v("**-l：**进行硬式连结(hard link)的连结档创建，而非复制文件本身；")]),t._v(" "),s("li",[t._v("**-p：**连同文件的属性一起复制过去，而非使用默认属性(备份常用)；")]),t._v(" "),s("li",[t._v("**-r：**递归持续复制，用於目录的复制行为；(常用)")]),t._v(" "),s("li",[t._v("**-s：**复制成为符号连结档 (symbolic link)，亦即『捷径』文件；")]),t._v(" "),s("li",[t._v("**-u：**若 destination 比 source 旧才升级 destination ！")])]),t._v(" "),s("p",[t._v("用 root 身份，将 root 目录下的 .bashrc 复制到 /tmp 下，并命名为 bashrc")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## cp ~/.bashrc /tmp/bashrc\n[root@www ~]## cp -i ~/.bashrc /tmp/bashrc\ncp: overwrite `/tmp/bashrc'? n  <==n不覆盖，y为覆盖\n")])])]),s("h4",{attrs:{id:"rm-移除文件或目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rm-移除文件或目录"}},[t._v("#")]),t._v(" rm (移除文件或目录)")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" rm [-fir] 文件或目录\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；")]),t._v(" "),s("li",[t._v("-i ：互动模式，在删除前会询问使用者是否动作")]),t._v(" "),s("li",[t._v("-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！")]),t._v(" "),s("li",[t._v("-rf 组合使用")])]),t._v(" "),s("p",[t._v("将刚刚在 cp 的实例中创建的 bashrc 删除掉！")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]## rm -i bashrc\nrm: remove regular file `bashrc'? y\n")])])]),s("p",[t._v("如果加上 -i 的选项就会主动询问喔，避免你删除到错误的档名！")]),t._v(" "),s("h4",{attrs:{id:"mv-移动文件与目录-或修改名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mv-移动文件与目录-或修改名称"}},[t._v("#")]),t._v(" mv (移动文件与目录，或修改名称)")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## mv [-fiu] source destination\n[root@www ~]## mv [options] source1 source2 source3 .... directory\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；")]),t._v(" "),s("li",[t._v("-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！")]),t._v(" "),s("li",[t._v("-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)")])]),t._v(" "),s("p",[t._v("复制一文件，创建一目录，将文件移动到目录中")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## cd /tmp\n[root@www tmp]## cp ~/.bashrc bashrc\n[root@www tmp]## mkdir mvtest\n[root@www tmp]## mv bashrc mvtest\n")])])]),s("p",[t._v("将某个文件移动到某个目录去，就是这样做！")]),t._v(" "),s("p",[t._v("将刚刚的目录名称更名为 mvtest2")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www tmp]## mv mvtest mvtest2\n")])])]),s("h3",{attrs:{id:"linux-文件内容查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-文件内容查看"}},[t._v("#")]),t._v(" Linux 文件内容查看")]),t._v(" "),s("p",[t._v("Linux系统中使用以下命令来查看文件的内容：")]),t._v(" "),s("ul",[s("li",[t._v("cat 由第一行开始显示文件内容")]),t._v(" "),s("li",[t._v("tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！")]),t._v(" "),s("li",[t._v("nl  显示的时候，顺道输出行号！")]),t._v(" "),s("li",[t._v("more 一页一页的显示文件内容")]),t._v(" "),s("li",[t._v("less 与 more 类似，但是比 more 更好的是，他可以往前翻页！")]),t._v(" "),s("li",[t._v("head 只看头几行")]),t._v(" "),s("li",[t._v("tail 只看尾巴几行")])]),t._v(" "),s("p",[t._v("你可以使用 *man [命令]*来查看各个命令的使用文档，如 ：man cp。")]),t._v(" "),s("h4",{attrs:{id:"cat-由第一行开始显示文件内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cat-由第一行开始显示文件内容"}},[t._v("#")]),t._v(" cat (由第一行开始显示文件内容)")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cat [-AbEnTv]\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-A ：相当於 -vET 的整合选项，可列出一些特殊字符而不是空白而已；")]),t._v(" "),s("li",[t._v("-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！")]),t._v(" "),s("li",[t._v("-E ：将结尾的断行字节 $ 显示出来；")]),t._v(" "),s("li",[t._v("-n ：列印出行号，连同空白行也会有行号，与 -b 的选项不同；")]),t._v(" "),s("li",[t._v("-T ：将 [tab] 按键以 ^I 显示出来；")]),t._v(" "),s("li",[t._v("-v ：列出一些看不出来的特殊字符")])]),t._v(" "),s("p",[t._v("检看 /etc/issue 这个文件的内容：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## cat /etc/issue\nCentOS release 6.4 (Final)\nKernel \\r on an \\m\n")])])]),s("h4",{attrs:{id:"tac-最后一行开始显示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tac-最后一行开始显示"}},[t._v("#")]),t._v(" tac (最后一行开始显示)")]),t._v(" "),s("p",[t._v("tac与cat命令刚好相反，文件内容从最后一行开始显示，可以看出 tac 是 cat 的倒着写！如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## tac /etc/issue\n\nKernel \\r on an \\m\nCentOS release 6.4 (Final)\n")])])]),s("h4",{attrs:{id:"nl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nl"}},[t._v("#")]),t._v(" nl")]),t._v(" "),s("p",[t._v("显示行号")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nl [-bnw] 文件\n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-b ：指定行号指定的方式，主要有两种：\n-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)；\n-b t ：如果有空行，空的那一行不要列出行号(默认值)；")]),t._v(" "),s("li",[t._v("-n ：列出行号表示的方法，主要有三种：\n-n ln ：行号在荧幕的最左方显示；\n-n rn ：行号在自己栏位的最右方显示，且不加 0 ；\n-n rz ：行号在自己栏位的最右方显示，且加 0 ；")]),t._v(" "),s("li",[t._v("-w ：行号栏位的占用的位数。")])]),t._v(" "),s("p",[t._v("实例一：用 nl 列出 /etc/issue 的内容")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## nl /etc/issue\n     1  CentOS release 6.4 (Final)\n     2  Kernel \\r on an \\m\n")])])]),s("h4",{attrs:{id:"more-翻页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#more-翻页"}},[t._v("#")]),t._v(" more(翻页)")]),t._v(" "),s("p",[t._v("一页一页翻动")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## more /etc/man_db.config \n#\n## Generated automatically from man.conf.in by the\n## configure script.\n#\n## man.conf from man-1.6d\n....(中间省略)....\n--More--(28%)  <== 重点在这一行喔！你的光标也会在这里等待你的命令\n")])])]),s("p",[t._v("在 more 这个程序的运行过程中，你有几个按键可以按的：")]),t._v(" "),s("ul",[s("li",[t._v("空白键 (space)：代表向下翻一页；")]),t._v(" "),s("li",[t._v("Enter     ：代表向下翻『一行』；")]),t._v(" "),s("li",[t._v("/字串     ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；")]),t._v(" "),s("li",[t._v(":f      ：立刻显示出档名以及目前显示的行数；")]),t._v(" "),s("li",[t._v("q       ：代表立刻离开 more ，不再显示该文件内容。")]),t._v(" "),s("li",[t._v("b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。")])]),t._v(" "),s("h4",{attrs:{id:"less-滚动查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#less-滚动查看"}},[t._v("#")]),t._v(" less (滚动查看)")]),t._v(" "),s("p",[t._v("一页一页翻动，以下实例输出/etc/man.config文件的内容：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## less /etc/man.config\n#\n## Generated automatically from man.conf.in by the\n## configure script.\n#\n## man.conf from man-1.6d\n....(中间省略)....\n:   <== 这里可以等待你输入命令！\n")])])]),s("p",[t._v("less运行时可以输入的命令有：")]),t._v(" "),s("ul",[s("li",[t._v("空白键  ：向下翻动一页；")]),t._v(" "),s("li",[t._v("[pagedown]：向下翻动一页；")]),t._v(" "),s("li",[t._v("[pageup] ：向上翻动一页；")]),t._v(" "),s("li",[t._v("/字串   ：向下搜寻『字串』的功能；")]),t._v(" "),s("li",[t._v("?字串   ：向上搜寻『字串』的功能；")]),t._v(" "),s("li",[t._v("n     ：重复前一个搜寻 (与 / 或 ? 有关！)")]),t._v(" "),s("li",[t._v("N     ：反向的重复前一个搜寻 (与 / 或 ? 有关！)")]),t._v(" "),s("li",[t._v("q     ：离开 less 这个程序；")])]),t._v(" "),s("h4",{attrs:{id:"head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[t._v("#")]),t._v(" head")]),t._v(" "),s("p",[t._v("取出文件前面几行")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("head [-n number] 文件 \n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-n ：后面接数字，代表显示几行的意思")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## head /etc/man.config\n")])])]),s("p",[t._v("默认的情况中，显示前面 10 行！若要显示前 20 行，就得要这样：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## head -n 20 /etc/man.config\n")])])]),s("h4",{attrs:{id:"tail"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tail"}},[t._v("#")]),t._v(" tail")]),t._v(" "),s("blockquote",[s("p",[t._v("取出文件后面几行")])]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("tail [-n number] 文件 \n")])])]),s("p",[t._v("选项与参数：")]),t._v(" "),s("ul",[s("li",[t._v("-n ：后面接数字，代表显示几行的意思")]),t._v(" "),s("li",[t._v("-f ：表示持续侦测后面所接的档名，要等到按下[ctrl]-c才会结束tail的侦测")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@www ~]## tail /etc/man.config\n## 默认的情况中，显示最后的十行！若要显示最后的 20 行，就得要这样：\n[root@www ~]## tail -n 20 /etc/man.config\n")])])]),s("h3",{attrs:{id:"linux-功能类命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-功能类命令"}},[t._v("#")]),t._v(" Linux 功能类命令")]),t._v(" "),s("h4",{attrs:{id:"ln-链接命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ln-链接命令"}},[t._v("#")]),t._v(" ln 链接命令")]),t._v(" "),s("blockquote",[s("p",[t._v("硬链接 - 相对于复制但是能够继承其所有属性")]),t._v(" "),s("p",[t._v("拷贝cp -p + 同步更新")]),t._v(" "),s("p",[t._v("可通过i节点识别")]),t._v(" "),s("p",[t._v("不能跨分区")]),t._v(" "),s("p",[t._v("不能针对目录使用")])]),t._v(" "),s("blockquote",[s("p",[t._v("软连接")]),t._v(" "),s("p",[t._v("软链接文件权限都为rwxrwxrwx")]),t._v(" "),s("p",[t._v("文件大小-只是符号链接")]),t._v(" "),s("p",[t._v("/tmp/issue.soft -> /etc/issue 箭头指向原文件")])]),t._v(" "),s("p",[t._v("语法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" ln [参数][源文件或目录][目标文件或目录]\n ln wuwei.txt wuwu.txt\n ln -s  wuwei.txt wuwuss.txt\n 硬链接和软连接不是根据文件的扩展名规定的，加了-s就是软连接，否则就是硬连接  \n")])])]),s("h4",{attrs:{id:"chmod-权限管理命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chmod-权限管理命令"}},[t._v("#")]),t._v(" chmod 权限管理命令")]),t._v(" "),s("blockquote",[s("p",[t._v("功能描述：改变文件或目录权限")])]),t._v(" "),s("p",[s("strong",[t._v("语法：")])]),t._v(" "),s("p",[s("strong",[t._v("chmod [{ugoa}{+-=}{rwx}] [文件或目录]  如:  chmod g+w aslic")])]),t._v(" "),s("p",[s("strong",[t._v("chmod  [mode=421 ] [文件或目录]  如:  chmod 141 aslic")])]),t._v(" "),s("p",[s("strong",[t._v("chmod  -R [mode=421 ] [文件或目录]如:  chmod -R 141 aslic")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("代表字符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("数字")]),t._v(" "),s("th",[t._v("权限")]),t._v(" "),s("th",[t._v("对文件的含义")]),t._v(" "),s("th",[t._v("对目录的含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("r")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",[t._v("读权限")]),t._v(" "),s("td",[t._v("可以查看文件 内容")]),t._v(" "),s("td",[t._v("可以列出目录中 的内容")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("w")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",[t._v("写权限")]),t._v(" "),s("td",[t._v("可以修改文件 内容")]),t._v(" "),s("td",[t._v("可以在目录中创 建、删除文件")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",[t._v("执行权限")]),t._v(" "),s("td",[t._v("可以执行文件")]),t._v(" "),s("td",[t._v("可以进入目录")])])])]),t._v(" "),s("h4",{attrs:{id:"find-文件搜索命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-文件搜索命令"}},[t._v("#")]),t._v(" find  文件搜索命令")]),t._v(" "),s("blockquote",[s("p",[t._v("功能描述：文件或者文件夹搜索")])]),t._v(" "),s("p",[s("strong",[t._v("语法：find [搜索范围 - 目录路径] [匹配条件]")])]),t._v(" "),s("p",[t._v("选项:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("条件类型:  -name 名称  -type 类型 (  p -> ,目录 / f -> 文件  )   -size 大小")]),t._v(" "),s("p",[t._v("-group 所属组查找   -cmin -5 查询5分钟内被修改过属性的文件和目录")])]),t._v(" "),s("li",[s("p",[t._v("通配符:  ? -> 占位符(一个字符)    * -> 多个匹配")])]),t._v(" "),s("li",[s("p",[t._v("-iname 不区分大小写")])]),t._v(" "),s("li",[s("p",[t._v("大小对比:  +n  大于   -n  小于    n  等于")])]),t._v(" "),s("li",[s("p",[t._v("与 或:  -a 两个条件同时满足 and          -o 两个条件满足任意一个即可 or")])]),t._v(" "),s("li",[s("p",[t._v("-exec/-ok 命令 {} ; 对搜索结果执行操作")])])]),t._v(" "),s("p",[t._v("案例:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询 apai目录下的 包含wu的 且类型为目录")]),t._v("\nfind "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("apai "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name wu"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("type f\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询 根目录下的 大小大于204800 的文件")]),t._v("\nfind "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("204800")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在根目录下查找所有者为zhangsan的文件")]),t._v("\nfind "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("user zhangsan\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在/etc下查找5分钟内被修改过属性的文件和目录")]),t._v("\nfind "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cmin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在/etc下查找inittab文件并显示其详细信息 -exec/-ok 命令 {} \\; 对搜索结果执行操作")]),t._v("\nfind "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name mengni "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("exec rm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("rf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \\\n")])])]),s("h4",{attrs:{id:"grep-文件内容搜索命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grep-文件内容搜索命令"}},[t._v("#")]),t._v(" grep 文件内容搜索命令")]),t._v(" "),s("blockquote",[s("p",[t._v("在文件中搜寻字串匹配的行并输出")])]),t._v(" "),s("p",[t._v("语法：grep  [指定字串] [文件]")]),t._v(" "),s("ul",[s("li",[t._v("-i 不区分大小写")]),t._v(" "),s("li",[t._v("-v 排除指定字串")])]),t._v(" "),s("p",[t._v("案例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 cs.txt 文件的内容里搜索包含 is 字符串且 -i 不区分大小写 ")]),t._v("\ngrep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i is cs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 cs.txt 文件的内容里搜索不包含 is 字符串且 -i 不区分大小写 ")]),t._v("\ngrep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("iv is cs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从install.log文中找mysql")]),t._v("\ngrep mysql "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("install"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把文件inittab每行的开头#去掉 如果不加^ 那么有可能去掉的是内容中间的#")]),t._v("\ngrep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("## "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("inittab\n")])])]),s("h3",{attrs:{id:"tar-压缩解压命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tar-压缩解压命令"}},[t._v("#")]),t._v(" tar 压缩解压命令")]),t._v(" "),s("blockquote",[s("p",[t._v("tar这个命令既可以打包压缩也可以解压")]),t._v(" "),s("p",[t._v("注意规范: 打包文件后缀 .tar 压缩文件后缀 .tar.gz")])]),t._v(" "),s("p",[t._v("选项:")]),t._v(" "),s("ul",[s("li",[t._v("-c  create   打包")])]),t._v(" "),s("ul",[s("li",[t._v("-x  解包 extract")]),t._v(" "),s("li",[t._v("-v  显示详细信息")]),t._v(" "),s("li",[t._v("-f  指定解压文件")]),t._v(" "),s("li",[t._v("-z  解压缩")])]),t._v(" "),s("p",[s("strong",[t._v("1）tar给一个文件或者一个目录打包")]),t._v("\ntar  -cvf   包名   源文件名")]),t._v(" "),s("p",[s("strong",[t._v("2）tar给一个打了包的文件解包")]),t._v("\ntar  -xvf  包名    注意：默认是解到当前目录，也可以指定到其他的目录\ntar  -xvf  包名 -C  目录名")]),t._v(" "),s("p",[s("strong",[t._v("3）tar给一个文件打包并压缩")]),t._v("\ntar  -zcvf   压缩名   源文件名")]),t._v(" "),s("p",[s("strong",[t._v("4）tar给一个文件解压缩")]),t._v("\ntar -zxvf 压缩名 -C 目录名")]),t._v(" "),s("h3",{attrs:{id:"网络命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络命令"}},[t._v("#")]),t._v(" 网络命令")]),t._v(" "),s("h4",{attrs:{id:"ping-测试网络连通性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ping-测试网络连通性"}},[t._v("#")]),t._v(" ping 测试网络连通性")]),t._v(" "),s("blockquote",[s("p",[t._v("测试网络连通性")])]),t._v(" "),s("p",[s("strong",[t._v("语法：ping 选项 IP地址")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("范例： ## ping 192.168.1.156\n\nping -c 3 192.168.1.156服务器回应3次即可，默认一直回应\n")])])]),s("h4",{attrs:{id:"netstat-网络相关信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netstat-网络相关信息"}},[t._v("#")]),t._v(" netstat  网络相关信息")]),t._v(" "),s("blockquote",[s("p",[t._v("显示网络相关信息")]),t._v(" "),s("p",[t._v("yum install net-tools")])]),t._v(" "),s("p",[t._v("语法：netstat  [选项]")]),t._v(" "),s("p",[t._v("选项：  netstat -tlnp")]),t._v(" "),s("ul",[s("li",[t._v("-t  TCP协议 三次握手 网络传输协议 打电话类似")]),t._v(" "),s("li",[t._v("-u  UDP协议 数据包协议   丢包率高，不握手")]),t._v(" "),s("li",[t._v("-l   lisenter 监听")]),t._v(" "),s("li",[t._v("-r   route")]),t._v(" "),s("li",[t._v("-n  number 显示ip和端口号")])]),t._v(" "),s("blockquote",[s("p",[t._v("当前是tcp协议")]),t._v(" "),s("p",[t._v("第一个0表示网络通畅，接受的数据包队列 没有挤压")]),t._v(" "),s("p",[t._v("第二个0表示发送的数据包队列，网络通畅")]),t._v(" "),s("p",[t._v("0.0.0.0 本地的ip地址 111 表示端口")]),t._v(" "),s("p",[t._v("Stat 表示TCP的监听  UDP没有监听的 注意")]),t._v(" "),s("p",[t._v("这条信息，表示当前有一台主机192.168.58.1正在连接到 linux192.168.58.128上 端口是22, ESTABLISHED连接")]),t._v(" "),s("p",[t._v("注意：自己电脑的端口是系统随机分配，不一定也要是22")]),t._v(" "),s("p",[t._v("## netstat -rn")]),t._v(" "),s("p",[t._v("显示route路由信息  n：numberic")])]),t._v(" "),s("h4",{attrs:{id:"ifconfig-查看和设置网卡信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ifconfig-查看和设置网卡信息"}},[t._v("#")]),t._v(" ifconfig  查看和设置网卡信息")]),t._v(" "),s("blockquote",[s("p",[t._v("查看和设置网卡信息")])]),t._v(" "),s("p",[t._v("语法：ifconfig 网卡名称  IP地址")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("范例：## ifconfig eth0 192.168.8.250")])]),t._v(" "),s("li",[s("p",[t._v("范例：## ifconfig -a #查看所有网卡")])])]),t._v(" "),s("h4",{attrs:{id:"last-登入系统的用户信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-登入系统的用户信息"}},[t._v("#")]),t._v(" last  登入系统的用户信息")]),t._v(" "),s("blockquote",[s("p",[t._v("列出目前与过去登入系统的用户信息")])]),t._v(" "),s("p",[t._v("语法：last")]),t._v(" "),s("h4",{attrs:{id:"traceroute-数据包到主机的路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#traceroute-数据包到主机的路径"}},[t._v("#")]),t._v(" traceroute 数据包到主机的路径")]),t._v(" "),s("blockquote",[s("p",[t._v("显示数据包到主机间的路径")])]),t._v(" "),s("p",[t._v("语法：traceroute")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("范例：## traceroute www.lampbrother.net\n   \t ## traceroute www.sina.com.cn\n访问新浪官网所经过的路由信息ip以及所花费的时间，如果时间长，\n表示在某一块路由服务有问题，或者断掉，通过这个命令可以看在哪一块出了问题\n")])])]),s("h3",{attrs:{id:"用户管理命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户管理命令"}},[t._v("#")]),t._v(" 用户管理命令")]),t._v(" "),s("h4",{attrs:{id:"su-切换用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#su-切换用户"}},[t._v("#")]),t._v(" su 切换用户")]),t._v(" "),s("p",[t._v("语法：su - 用户名")]),t._v(" "),s("h4",{attrs:{id:"useradd-添加新用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useradd-添加新用户"}},[t._v("#")]),t._v(" useradd   添加新用户")]),t._v(" "),s("blockquote",[s("p",[t._v("添加新用户")])]),t._v(" "),s("p",[t._v("语法：useradd 用户名")]),t._v(" "),s("h4",{attrs:{id:"passwd-设置用户密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#passwd-设置用户密码"}},[t._v("#")]),t._v(" passwd  设置用户密码")]),t._v(" "),s("blockquote",[s("p",[t._v("设置用户密码")])]),t._v(" "),s("p",[t._v("语法：passwd 用户名")]),t._v(" "),s("h4",{attrs:{id:"w-查看登录用户详细信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#w-查看登录用户详细信息"}},[t._v("#")]),t._v(" w 查看登录用户详细信息")]),t._v(" "),s("blockquote",[s("p",[t._v("查看登录用户详细信息")])]),t._v(" "),s("p",[t._v("语法：w")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://apaiimages.oss-cn-guangzhou.aliyuncs.com/MD/image-20220621223236948.png",alt:"image-20220621223236948"}})]),t._v(" "),s("ul",[s("li",[t._v("up表示linux连续运行的时间")]),t._v(" "),s("li",[t._v("load average 系统的负载情况")]),t._v(" "),s("li",[t._v("what 表示一个用户当前执行了什么操作，如果什么操作都没有做 就是base")]),t._v(" "),s("li",[t._v("JCPU、PCPU占用CPU资源的情况")])]),t._v(" "),s("h4",{attrs:{id:"userdel-删除帐号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#userdel-删除帐号"}},[t._v("#")]),t._v(" userdel  删除帐号")]),t._v(" "),s("p",[t._v("语法:   userdel 选项 用户名")]),t._v(" "),s("p",[t._v("常用的选项是 "),s("strong",[t._v("-r")]),t._v("，它的作用是把用户的主目录一起删除。")]),t._v(" "),s("h4",{attrs:{id:"usermod-修改帐号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usermod-修改帐号"}},[t._v("#")]),t._v(" usermod 修改帐号")]),t._v(" "),s("p",[t._v("修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录Shell等。")]),t._v(" "),s("p",[t._v("修改已有用户的信息使用"),s("code",[t._v("usermod")]),t._v("命令，其格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("usermod 选项 用户名\n")])])]),s("p",[t._v("常用的选项包括"),s("code",[t._v("-c, -d, -m, -g, -G, -s, -u以及-o等")]),t._v("，这些选项的意义与"),s("code",[t._v("useradd")]),t._v("命令中的选项一样，可以为用户指定新的资源值。")]),t._v(" "),s("p",[t._v("另外，有些系统可以使用选项：-l 新用户名")]),t._v(" "),s("p",[t._v("这个选项指定一个新的账号，即将原来的用户名改为新的用户名。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("## usermod -s /bin/ksh -d /home/z –g developer sam\n")])])]),s("p",[t._v("此命令将用户sam的登录Shell修改为ksh，主目录改为/home/z，用户组改为developer。")]),t._v(" "),s("h3",{attrs:{id:"挂载命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#挂载命令"}},[t._v("#")]),t._v(" 挂载命令")]),t._v(" "),s("blockquote",[s("p",[t._v("相当于在linux分配一个盘符，把U盘等等的外部设备内容和该盘符（这个盘符是一个目录，在windows里是一个盘符如：H盘，i盘）连接")])]),t._v(" "),s("p",[s("strong",[t._v("挂载语法")]),t._v(": mount  名字  挂载位置")]),t._v(" "),s("blockquote",[s("p",[t._v("U盘: /dev/sdb   光驱: /dev/sr0")])]),t._v(" "),s("blockquote",[s("p",[t._v("如: 将U盘挂载至 mnut下的aa文件夹   mount  /dev/sdb  /mnt/aa")])]),t._v(" "),s("p",[s("strong",[t._v("取消挂载")]),t._v(" :  umount /dev/sr0")]),t._v(" "),s("p",[t._v("步骤:")]),t._v(" "),s("ul",[s("li",[t._v("在根目录下mnt目录,一般习惯上在这个目录里面再创建一个目录用来挂载,")]),t._v(" "),s("li",[t._v("在根目录dev目录下可查询对应的设备")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("注意1：在根目录下有一个mnt目录，这个目录就是用来做挂载的（相当盘符），一般习惯上在这个目录里面再创建一个目录cdrom,相当创建一个盘符\n注意2：设备文件名 dev/sr0 就是光驱硬件 在centos6以上的版本，光驱的设备文件名默认就是dev/sr0 ,也可以写成  dev/cdrom\n注意2：在取消挂载时不能在挂载目录里取消\n\n因为在dev目录里面的cdrom就是一个软连接，指向的就是sr0\n[zhangsan@localhost ~]$ ls -ld /dev/cdrom\nlrwxrwxrwx. 1 root root 3 10月 28 00:02 /dev/cdrom -> sr0\n挂载点就是盘符\n挂载成功，就是盘符和设备硬件建立了连接\n")])])]),s("h3",{attrs:{id:"关机重启命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关机重启命令"}},[t._v("#")]),t._v(" 关机重启命令")]),t._v(" "),s("h4",{attrs:{id:"shutdown命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shutdown命令"}},[t._v("#")]),t._v(" shutdown命令")]),t._v(" "),s("p",[t._v("语法:  shutdown [选项] 时间")]),t._v(" "),s("p",[t._v("选项： shutdown 会保存内容再关机")]),t._v(" "),s("p",[t._v("-c： 取消前一个关机命令  cancel")]),t._v(" "),s("p",[t._v("-h： 关机   halt 停止的含义")]),t._v(" "),s("p",[t._v("-r： 重启   reboot")]),t._v(" "),s("blockquote",[s("p",[t._v("[root@localhost ~]#shutdown -h 20:30  晚上八点半关机")]),t._v(" "),s("p",[t._v("[root@localhost ~]#shutdown -h now    立刻关机 h:halted 停下来")]),t._v(" "),s("p",[t._v("[root@localhost ~]#shutdown -c              取消关机")]),t._v(" "),s("p",[t._v("[root@localhost cdrom]## shutdown  -r now")]),t._v(" "),s("p",[t._v("直接拔掉电源：对于高速运转的硬盘 导致损坏")])]),t._v(" "),s("p",[s("strong",[t._v("其他关机命令")])]),t._v(" "),s("ul",[s("li",[t._v("[root@localhost ~]## halt")]),t._v(" "),s("li",[t._v("[root@localhost ~]## poweroff")]),t._v(" "),s("li",[t._v("[root@localhost ~]## init 0")])]),t._v(" "),s("p",[s("strong",[t._v("其他重启命令")])]),t._v(" "),s("ul",[s("li",[t._v("root@localhost ~]## reboot")]),t._v(" "),s("li",[t._v("[root@localhost ~]## init 6")])]),t._v(" "),s("p",[s("strong",[t._v("系统运行级别")])]),t._v(" "),s("ul",[s("li",[t._v("0 关机")]),t._v(" "),s("li",[t._v("1 单用户 类似windows开启的安全模式进入，就是启动 最小的服务 进入window操作系统，因为其他的服务导致window无法启动")]),t._v(" "),s("li",[t._v("2 不完全多用户不含NFS服务（network file system 它就是2个系统之间共享文件的一个服务）")]),t._v(" "),s("li",[t._v("3 完全多用户：完全的命令行")]),t._v(" "),s("li",[t._v("4 未分配")]),t._v(" "),s("li",[t._v("5  图形界面")]),t._v(" "),s("li",[t._v("6 重启")])]),t._v(" "),s("h3",{attrs:{id:"dos文本和unix格式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dos文本和unix格式转换"}},[t._v("#")]),t._v(" dos文本和unix格式转换")]),t._v(" "),s("h4",{attrs:{id:"dos2unix-转linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dos2unix-转linux"}},[t._v("#")]),t._v(" dos2unix  转linux")]),t._v(" "),s("p",[t._v("作用：dos2unix命令：用来将DOS格式的文本文件转换成UNIX格式")]),t._v(" "),s("p",[t._v("语法：dos2unix 文件名")]),t._v(" "),s("h4",{attrs:{id:"unix2dos-转window"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unix2dos-转window"}},[t._v("#")]),t._v(" unix2dos  转window")]),t._v(" "),s("p",[t._v("作用：unix2dos命令：用来将unix格式的文本文件转换成dos格式")]),t._v(" "),s("p",[t._v("语法：unix2dos 文件名")]),t._v(" "),s("h3",{attrs:{id:"系统类命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统类命令"}},[t._v("#")]),t._v(" 系统类命令")]),t._v(" "),s("h4",{attrs:{id:"_1、查看linux系统是多少位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、查看linux系统是多少位"}},[t._v("#")]),t._v(" 1、查看linux系统是多少位")]),t._v(" "),s("p",[t._v("[oracle@localhost database]$ getconf LONG_BIT")]),t._v(" "),s("h4",{attrs:{id:"_2、linux查看操作系统内核信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、linux查看操作系统内核信息"}},[t._v("#")]),t._v(" 2、Linux查看操作系统内核信息")]),t._v(" "),s("p",[t._v("[oracle@localhost database]$ uname -a")]),t._v(" "),s("p",[t._v("[oracle@localhost database]$ uname -r")]),t._v(" "),s("h4",{attrs:{id:"_3、linux查看操作系统版本信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、linux查看操作系统版本信息"}},[t._v("#")]),t._v(" 3、Linux查看操作系统版本信息")]),t._v(" "),s("blockquote",[s("p",[t._v("查看当前操作系统版本信息")])]),t._v(" "),s("p",[t._v("[oracle@localhost database]$ cat /proc/version")]),t._v(" "),s("h3",{attrs:{id:"wget-命令下载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wget-命令下载"}},[t._v("#")]),t._v(" wget 命令下载")]),t._v(" "),s("blockquote",[s("p",[t._v("wget是Linux中的一个下载文件的工具，wget是在Linux下开发的开放源代码的软件，wget工具体积小但功能完善，它支持断点下载功能，同时支持FTP和HTTP下载方式，支持代理服务器和设置起来方便简单")]),t._v(" "),s("p",[t._v("[root@network test]## yum install -y wget")])]),t._v(" "),s("h4",{attrs:{id:"下载保存当前目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载保存当前目录"}},[t._v("#")]),t._v(" 下载保存当前目录")]),t._v(" "),s("ul",[s("li",[t._v("语法: wget 下载地址")])]),t._v(" "),s("blockquote",[s("p",[t._v("从网络下载一个文件并保存在当前目录")]),t._v(" "),s("p",[t._v("[root@network test]#wget http://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/glibc-2.17-55.fc20/glibc-utils-2.17-55.el6.x86_64.rpm")])]),t._v(" "),s("h4",{attrs:{id:"下载重命名保存当前目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载重命名保存当前目录"}},[t._v("#")]),t._v(" 下载重命名保存当前目录")]),t._v(" "),s("ul",[s("li",[t._v("语法: wget -O 下载名字 下载地址")])]),t._v(" "),s("blockquote",[s("p",[t._v("使用 wget -O 下载并以不同的文件名保存")]),t._v(" "),s("p",[t._v("[root@network test]#wget -O copr-be.rpm")]),t._v(" "),s("p",[t._v("http://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/glibc-2.17-55.fc20/glibc-utils-2.17-55.el6.x86_64.rpm")])]),t._v(" "),s("h4",{attrs:{id:"断点下载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#断点下载"}},[t._v("#")]),t._v(" 断点下载")]),t._v(" "),s("ul",[s("li",[t._v("语法: wget -c 下载地址")])]),t._v(" "),s("blockquote",[s("p",[t._v("使用 wget -c 断点续传")]),t._v(" "),s("p",[t._v("使用wget -c重新启动下载中断的文件:对于我们下载大文件时突然由于网络等原因中断非常有帮助，我们可以继续接着下载而不是重新下载一个文件")]),t._v(" "),s("p",[t._v("[root@network test]#wget -c https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz")])]),t._v(" "),s("h4",{attrs:{id:"后台下载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后台下载"}},[t._v("#")]),t._v(" 后台下载")]),t._v(" "),s("ul",[s("li",[t._v("语法: wget -b 下载地址")])]),t._v(" "),s("blockquote",[s("p",[t._v("使用 wget -b 后台下载")]),t._v(" "),s("p",[t._v("[root@network test]#wget -b https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz")])]),t._v(" "),s("h3",{attrs:{id:"后台运行jar包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后台运行jar包"}},[t._v("#")]),t._v(" 后台运行jar包")]),t._v(" "),s("blockquote",[s("p",[t._v("能够将web项目打包成的jar包放入Linxu系统并运行 使用其ip地址和端口访问程序")])]),t._v(" "),s("p",[t._v("语法一:")]),t._v(" "),s("p",[t._v("java -jar XXX.jar &")]),t._v(" "),s("p",[t._v("nohup java -jar XXX.jar &")]),t._v(" "),s("ul",[s("li",[t._v("常规语法 运行指定jar包 注意是在前台运行 关闭会话即停止 会将日志存储至   nohup.out   文件内")])]),t._v(" "),s("p",[t._v("语法二:")]),t._v(" "),s("p",[t._v("java -jar XXX.jar --server.port=8081 > demo.out &")]),t._v(" "),s("p",[t._v("nohup java -jar XXX.jar --server.port=8081 > demo.out &")]),t._v(" "),s("ul",[s("li",[t._v("设置访问端口 8081  和 日志的存储文件 demo.out")])]),t._v(" "),s("h3",{attrs:{id:"防火墙-端口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防火墙-端口"}},[t._v("#")]),t._v(" 防火墙 端口")]),t._v(" "),s("p",[t._v("https://blog.csdn.net/wade3015/article/details/90725871")]),t._v(" "),s("blockquote",[s("p",[t._v("开启指定端口 报错执行如下指令")]),t._v(" "),s("p",[t._v("systemctl status firewalld")])]),t._v(" "),s("p",[t._v("1、查看已经开放的端口")]),t._v(" "),s("p",[t._v("firewall-cmd --list-ports")]),t._v(" "),s("p",[t._v("2、开启指定端口")]),t._v(" "),s("p",[t._v("firewall-cmd --zone=public --add-port=8080/tcp --permanent")]),t._v(" "),s("p",[t._v("说明：参数--permanent永久生效，没有此参数重启后失效")]),t._v(" "),s("p",[t._v("2、重启防火墙")]),t._v(" "),s("p",[t._v("firewall-cmd --reload")]),t._v(" "),s("p",[t._v("3、查询指定端口是否已开")]),t._v(" "),s("p",[t._v("4.临时关闭防火墙")]),t._v(" "),s("p",[t._v("systemctl stop  firewalld.service")]),t._v(" "),s("p",[t._v("5.关闭端口")]),t._v(" "),s("p",[t._v("kill -9  PID")]),t._v(" "),s("p",[t._v("6.开启防火墙：systemctl start firewalld")]),t._v(" "),s("h3",{attrs:{id:"查看linux运行的进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看linux运行的进程"}},[t._v("#")]),t._v(" 查看linux运行的进程")]),t._v(" "),s("p",[s("strong",[t._v("语法")]),t._v(":  ps -ef")]),t._v(" "),s("h3",{attrs:{id:"管道符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#管道符"}},[t._v("#")]),t._v(" 管道符  |")]),t._v(" "),s("blockquote",[s("p",[t._v("可以连接两个命令  就是前一个命令的输出作为后一个命令的输入")])]),t._v(" "),s("p",[t._v("语法:   ps -ef | grep xxx")]),t._v(" "),s("ul",[s("li",[t._v("在linux运行的进程里 查询包含xxx的选项")])]),t._v(" "),s("h2",{attrs:{id:"vim-文本编辑器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-文本编辑器"}},[t._v("#")]),t._v(" vim -- 文本编辑器")]),t._v(" "),s("blockquote",[s("p",[t._v("Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。vim 的官方网站 (https://www.vim.org/)")])]),t._v(" "),s("h3",{attrs:{id:"vi-vim-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vi-vim-的使用"}},[t._v("#")]),t._v(" vi/vim 的使用")]),t._v(" "),s("p",[t._v("基本上 vi/vim 共分为三种模式，分别是"),s("strong",[t._v("命令模式（Command mode）")]),t._v("，"),s("strong",[t._v("输入模式（Insert mode）"),s("strong",[t._v("和")]),t._v("底线命令模式（Last line mode）")]),t._v("。 这三种模式的作用分别是：")]),t._v(" "),s("p",[t._v("下载:   yum -y install vim")]),t._v(" "),s("h4",{attrs:{id:"命令模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令模式"}},[t._v("#")]),t._v(" 命令模式：")]),t._v(" "),s("p",[t._v("用户刚刚启动 vi/vim，便进入了命令模式。")]),t._v(" "),s("p",[t._v("此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。")]),t._v(" "),s("p",[t._v("以下是常用的几个命令：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("i")]),t._v(" 切换到输入模式，以输入字符。")]),t._v(" "),s("li",[s("strong",[t._v("x")]),t._v(" 删除当前光标所在处的字符。")]),t._v(" "),s("li",[s("strong",[t._v(":")]),t._v(" 切换到底线命令模式，以在最底一行输入命令。")])]),t._v(" "),s("p",[t._v("若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。")]),t._v(" "),s("p",[t._v("命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。")]),t._v(" "),s("h4",{attrs:{id:"输入模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入模式"}},[t._v("#")]),t._v(" 输入模式")]),t._v(" "),s("p",[t._v("在命令模式下按下i就进入了输入模式。")]),t._v(" "),s("p",[t._v("在输入模式中，可以使用以下按键：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("字符按键以及Shift组合")]),t._v("，输入字符")]),t._v(" "),s("li",[s("strong",[t._v("ENTER")]),t._v("，回车键，换行")]),t._v(" "),s("li",[s("strong",[t._v("BACK SPACE")]),t._v("，退格键，删除光标前一个字符")]),t._v(" "),s("li",[s("strong",[t._v("DEL")]),t._v("，删除键，删除光标后一个字符")]),t._v(" "),s("li",[s("strong",[t._v("方向键")]),t._v("，在文本中移动光标")]),t._v(" "),s("li",[s("strong",[t._v("HOME")]),t._v("/"),s("strong",[t._v("END")]),t._v("，移动光标到行首/行尾")]),t._v(" "),s("li",[s("strong",[t._v("Page Up")]),t._v("/"),s("strong",[t._v("Page Down")]),t._v("，上/下翻页")]),t._v(" "),s("li",[s("strong",[t._v("Insert")]),t._v("，切换光标为输入/替换模式，光标将变成竖线/下划线")]),t._v(" "),s("li",[s("strong",[t._v("ESC")]),t._v("，退出输入模式，切换到命令模式")])]),t._v(" "),s("h4",{attrs:{id:"底线命令模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#底线命令模式"}},[t._v("#")]),t._v(" 底线命令模式")]),t._v(" "),s("p",[t._v("在命令模式下按下:（英文冒号）就进入了底线命令模式。")]),t._v(" "),s("p",[t._v("底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。")]),t._v(" "),s("p",[t._v("在底线命令模式中，基本的命令有（已经省略了冒号）：")]),t._v(" "),s("ul",[s("li",[t._v("q 退出程序")]),t._v(" "),s("li",[t._v("w 保存文件")])]),t._v(" "),s("p",[t._v("按ESC键可随时退出底线命令模式。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://apaiimages.oss-cn-guangzhou.aliyuncs.com/MD/image-20220622153611874.png",alt:"image-20220622153611874"}})]),t._v(" "),s("h3",{attrs:{id:"文件编辑命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件编辑命令"}},[t._v("#")]),t._v(" 文件编辑命令")]),t._v(" "),s("h4",{attrs:{id:"插入命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入命令"}},[t._v("#")]),t._v(" 插入命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("a")])]),t._v(" "),s("td",[t._v("在光标所在字符后插入")])]),t._v(" "),s("tr",[s("td",[t._v("A")]),t._v(" "),s("td",[t._v("在光标所在行尾插入")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("i")])]),t._v(" "),s("td",[t._v("在光标所在字符前插入")])]),t._v(" "),s("tr",[s("td",[t._v("I")]),t._v(" "),s("td",[t._v("在光标所在行行首插入")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("o")])]),t._v(" "),s("td",[t._v("在光标下插入新行")])]),t._v(" "),s("tr",[s("td",[t._v("O")]),t._v(" "),s("td",[t._v("在光标上插入新行")])])])]),t._v(" "),s("h4",{attrs:{id:"定位命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定位命令"}},[t._v("#")]),t._v(" 定位命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(": set nu")]),t._v(" "),s("td",[t._v("设置行号")])]),t._v(" "),s("tr",[s("td",[t._v(": set nonu")]),t._v(" "),s("td",[t._v("取消行号")])]),t._v(" "),s("tr",[s("td",[t._v("gg   G")]),t._v(" "),s("td",[t._v("到第一行   到最后一行")])]),t._v(" "),s("tr",[s("td",[t._v("nG")]),t._v(" "),s("td",[t._v("到第n行")])]),t._v(" "),s("tr",[s("td",[t._v(": n")]),t._v(" "),s("td",[t._v("到第n行")])]),t._v(" "),s("tr",[s("td",[t._v("$")]),t._v(" "),s("td",[t._v("行尾")])]),t._v(" "),s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[t._v("行首")])])])]),t._v(" "),s("h4",{attrs:{id:"删除命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除命令"}},[t._v("#")]),t._v(" 删除命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("x")]),t._v(" "),s("td",[t._v("删除光标所在处字符")])]),t._v(" "),s("tr",[s("td",[t._v("nx")]),t._v(" "),s("td",[t._v("删除光标所在处后n个字符")])]),t._v(" "),s("tr",[s("td",[t._v("dd")]),t._v(" "),s("td",[t._v("删除光标所在行，ndd删除n行")])]),t._v(" "),s("tr",[s("td",[t._v("dG")]),t._v(" "),s("td",[t._v("删除光标所在行到文件末尾内容")])]),t._v(" "),s("tr",[s("td",[t._v("D")]),t._v(" "),s("td",[t._v("删除光标所在处到行尾内容")])]),t._v(" "),s("tr",[s("td",[t._v(":n1,n2d")]),t._v(" "),s("td",[t._v("删除指定范围的行")])])])]),t._v(" "),s("h4",{attrs:{id:"复制和剪切命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复制和剪切命令"}},[t._v("#")]),t._v(" 复制和剪切命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("yy")]),t._v(" "),s("td",[t._v("复制当前行")])]),t._v(" "),s("tr",[s("td",[t._v("nyy")]),t._v(" "),s("td",[t._v("复制当前行以下n行")])]),t._v(" "),s("tr",[s("td",[t._v("dd")]),t._v(" "),s("td",[t._v("剪切当前行")])]),t._v(" "),s("tr",[s("td",[t._v("ndd")]),t._v(" "),s("td",[t._v("剪切当前行以下n行")])]),t._v(" "),s("tr",[s("td",[t._v("p、P")]),t._v(" "),s("td",[t._v("粘贴在当前光标所在行下 或行上")])])])]),t._v(" "),s("h4",{attrs:{id:"替换和取消命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换和取消命令"}},[t._v("#")]),t._v(" 替换和取消命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("r")]),t._v(" "),s("td",[t._v("取代光标所在处字符")])]),t._v(" "),s("tr",[s("td",[t._v("R")]),t._v(" "),s("td",[t._v("从光标所在处开始替换字  符，按Esc结束")])]),t._v(" "),s("tr",[s("td",[t._v("u")]),t._v(" "),s("td",[t._v("取消上一步操作")])])])]),t._v(" "),s("h4",{attrs:{id:"搜索和搜索替换命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搜索和搜索替换命令"}},[t._v("#")]),t._v(" 搜索和搜索替换命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("/string")]),t._v(" "),s("td",[t._v("搜索指定字符串 搜索时忽略大小写 **😗*set ic")])]),t._v(" "),s("tr",[s("td",[t._v("n")]),t._v(" "),s("td",[t._v("搜索指定字符串的下一个出现位置")])]),t._v(" "),s("tr",[s("td",[t._v(":%s/old/new/g")]),t._v(" "),s("td",[t._v("全文替换指定字符串")])]),t._v(" "),s("tr",[s("td",[t._v(":1,10s/old/new/g")]),t._v(" "),s("td",[t._v("在一定范围内替换指定字符串  1到10行")])])])]),t._v(" "),s("h4",{attrs:{id:"保存和退出命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保存和退出命令"}},[t._v("#")]),t._v(" 保存和退出命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(":w")]),t._v(" "),s("td",[t._v("保存修改")])]),t._v(" "),s("tr",[s("td",[t._v(":w new_filename")]),t._v(" "),s("td",[t._v("另存为指定文件")])]),t._v(" "),s("tr",[s("td",[t._v(":wq")]),t._v(" "),s("td",[t._v("保存修改并退出")])]),t._v(" "),s("tr",[s("td",[t._v("ZZ")]),t._v(" "),s("td",[t._v("快捷键，保存修改并退出，在vi命令下使用")])]),t._v(" "),s("tr",[s("td",[t._v(":q!")]),t._v(" "),s("td",[t._v("不保存修改退出")])]),t._v(" "),s("tr",[s("td",[t._v(":wq!")]),t._v(" "),s("td",[t._v("保存修改并退出（文件所有者及root可使用）")])])])]),t._v(" "),s("h3",{attrs:{id:"vim使用技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim使用技巧"}},[t._v("#")]),t._v(" Vim使用技巧")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("导入命令执行结果 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("r  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("命令\n\n定义快捷键 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("map 快捷键 触发命令\n\n范例： "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("P")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("I")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ESC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" map    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("x\n\n连续行注释\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("n1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("g\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("n1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//g")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("n1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("g\n")])])]),s("h2",{attrs:{id:"linux-yum-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-yum-命令"}},[t._v("#")]),t._v(" Linux yum 命令")]),t._v(" "),s("p",[t._v("yum（ Yellow dog Updater, Modified）是一个在 Fedora 和 RedHat 以及 SUSE 中的 Shell 前端软件包管理器。")]),t._v(" "),s("p",[t._v("基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。")]),t._v(" "),s("p",[t._v("yum 提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。")]),t._v(" "),s("h3",{attrs:{id:"yum-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yum-语法"}},[t._v("#")]),t._v(" yum 语法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum [options] [command] [package ...]\n")])])]),s("ul",[s("li",[t._v('**options：**可选，选项包括-h（帮助），-y（当安装过程提示选择全部为 "yes"），-q（不显示安装的过程）等等。')]),t._v(" "),s("li",[t._v("**command：**要进行的操作。")]),t._v(" "),s("li",[t._v("**package：**安装的包名。")])]),t._v(" "),s("h3",{attrs:{id:"yum常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yum常用命令"}},[t._v("#")]),t._v(" yum常用命令")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 列出所有可更新的软件清单命令："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum check"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 更新所有软件命令："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 仅安装指定的软件命令："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum install "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("package_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 仅更新指定的软件命令："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum update "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("package_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" 列出所有可安裝的软件清单命令："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v(" 删除软件包命令："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum remove "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("package_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.")]),t._v(" 查找软件包命令："),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum search "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("keyword"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.")]),t._v(" 清除缓存命令"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum clean packages"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 清除缓存目录下的软件包\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum clean headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 清除缓存目录下的 headers\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum clean oldheaders"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 清除缓存目录下旧的 headers\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yum clean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" yum clean all "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" yum clean packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" yum clean oldheaders"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("清除缓存目录下的软件包及旧的 headers\n")])])]),s("p",[s("strong",[t._v("netstat  网络相关信息")])]),t._v(" "),s("blockquote",[s("p",[t._v("显示网络相关信息")]),t._v(" "),s("p",[t._v("yum install net-tools")])]),t._v(" "),s("h2",{attrs:{id:"nginx-分隔"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-分隔"}},[t._v("#")]),t._v(" ------------   nginx 分隔    -----------")]),t._v(" "),s("h2",{attrs:{id:"nginx-反向代理-服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-反向代理-服务器"}},[t._v("#")]),t._v(" nginx 反向代理 服务器")]),t._v(" "),s("h3",{attrs:{id:"版本和安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本和安装"}},[t._v("#")]),t._v(" 版本和安装")]),t._v(" "),s("h4",{attrs:{id:"window版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window版"}},[t._v("#")]),t._v(" window版")]),t._v(" "),s("p",[t._v("从官网 "),s("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[s("em",[t._v("http://nginx.org/en/download.html")]),t._v(" (opens new window)")]),t._v("下载最新的文档版。例如："),s("code",[t._v("nginx-1.18.0")])]),t._v(" "),s("p",[t._v("解压 "),s("em",[s("code",[t._v("nginx-1.18.0.zip")])]),t._v(" 到本地目录。按惯例，路径中不要有中文，最好不要有空格。例如："),s("code",[t._v("D:\\ProgramFiles\\nginx-1.18.0")]),t._v(" 。")]),t._v(" "),s("p",[t._v("解压后，可到看到如下内容：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nginx-1.18.0\n│── conf        配置文件目录\n├── contrib\n├── docs\n├── html        类似 tomcat 的 webapps\n├── logs        日志目录  access.log成功日志  error.log失败日志\n├── temp\n└── nginx.exe   启动程序\n")])])]),s("h5",{attrs:{id:"启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),s("p",[t._v("启动 Nginx 的方式有 2 种：")]),t._v(" "),s("ol",[s("li",[t._v("直接双击 "),s("code",[t._v("nginx.exe")]),t._v("。双击后一个黑色的弹窗一闪而过。")]),t._v(" "),s("li",[t._v("打开 cmd 命令窗口，切换到 nginx 解压目录下，输入命令 "),s("code",[t._v("nginx.exe")]),t._v(" 或者 "),s("code",[t._v("start nginx")]),t._v(" 。")])]),t._v(" "),s("p",[t._v("检查 Nginx 是否启动成功的方式也有 2 种：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("直接在浏览器地址栏输入网址 "),s("a",{attrs:{href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"}},[s("em",[t._v("http://localhost:80")]),t._v(" (opens new window)")]),t._v("。你会看到欢迎页面。")])]),t._v(" "),s("li",[s("p",[t._v("在 cmd 命令窗口输入命令 "),s("code",[t._v('tasklist /fi "imagename eq nginx.exe"')]),t._v(" 。你会看到类似如下页面：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("映像名称    PID     会话名      会话##   内存使用\n=========== ======= =========== ======= ============\nnginx.exe   17220   Console     8       7,148 K\nnginx.exe   17660   Console     8       7,508 K\n")])])])])]),t._v(" "),s("h5",{attrs:{id:"关闭"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭"}},[t._v("#")]),t._v(" 关闭")]),t._v(" "),s("p",[t._v("如果使用 cmd 命令窗口启动 nginx，关闭 cmd 窗口是"),s("strong",[t._v("不能")]),t._v("结束 nginx 进程的。")]),t._v(" "),s("p",[t._v("可使用两种方法关闭 nginx：")]),t._v(" "),s("ol",[s("li",[t._v("输入 "),s("code",[t._v("nginx")]),t._v(" 命令："),s("code",[t._v("nginx -s stop")]),t._v("（快速停止 nginx）或 "),s("code",[t._v("nginx -s quit")]),t._v("（完整有序的停止 nginx）。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("taskkill")]),t._v(" 命令： "),s("code",[t._v("taskkill /f /t /im nginx.exe")])])]),t._v(" "),s("h4",{attrs:{id:"linux版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux版"}},[t._v("#")]),t._v(" linux版")]),t._v(" "),s("blockquote",[s("p",[t._v("可看下方简洁安装步骤")])]),t._v(" "),s("h5",{attrs:{id:"环境依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境依赖"}},[t._v("#")]),t._v(" 环境依赖")]),t._v(" "),s("p",[t._v("1、需要安装gcc的环境。yum install gcc-c++")]),t._v(" "),s("p",[t._v("2、第三方的开发包。")]),t._v(" "),s("p",[t._v("PCRE:PCRE(Perl Compatible Regular Expressions)是一个Perl库，包括 perl 兼容的正则表达式库。nginx的http模块使用pcre来解析正则表达式，所以需要在linux上安装pcre库。pcre-devel是使用pcre开发的一个二次开发库。nginx也需要此库。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y pcre pcre-devel\n")])])]),s("p",[t._v("zlib:zlib库提供了很多种压缩和解压缩的方式，nginx使用zlib对http包的内容进行gzip，所以需要在linux上安装zlib库。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y zlib zlib-devel\n")])])]),s("p",[t._v("openssl:\tOpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及SSL协议，并提供丰富的应用程序供测试或其它目的使用。nginx不仅支持http协议，还支持https（即在ssl协议上传输http），所以需要在linux安装openssl库。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y openssl openssl-devel\n")])])]),s("h5",{attrs:{id:"安装步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装步骤"}},[t._v("#")]),t._v(" 安装步骤")]),t._v(" "),s("p",[t._v("把nginx的源码包上传到linux系统")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## tar zxvf nginx-1.8.0.tar.gz")]),t._v("\n")])])]),s("p",[t._v("使用configure命令创建一makeFile文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("./configure "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--prefix"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--pid-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/run/nginx/nginx.pid "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--lock-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lock/nginx.lock "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--error-log-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/log/nginx/error.log "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-log-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/log/nginx/access.log "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--with-http_gzip_static_module "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-client-body-temp-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/client "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-proxy-temp-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/proxy "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-fastcgi-temp-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/fastcgi "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-uwsgi-temp-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/uwsgi "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-scgi-temp-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/scgi\n")])])]),s("p",[t._v("注意：启动nginx之前，上边将临时文件目录指定为/var/temp/nginx，需要在/var下创建temp及nginx目录")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## mkdir  -p  /var/temp/nginx/client ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#make")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#make install")]),t._v("\n")])])]),s("h5",{attrs:{id:"启动-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-nginx"}},[t._v("#")]),t._v(" 启动 nginx")]),t._v(" "),s("blockquote",[s("p",[t._v("注意:  安装完成的源目录是在 /usr/local/nginx/sbin 里 并不是安装包的位置")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("进入sbin目录\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## ./nginx ")]),t._v("\n关闭nginx：\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## ./nginx -s stop")]),t._v("\n推荐使用：\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## ./nginx -s quit")]),t._v("\n重启nginx：\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、先关闭后启动。\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、刷新配置文件：\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## ./nginx -s reload")]),t._v("\n")])])]),s("h5",{attrs:{id:"访问-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问-nginx"}},[t._v("#")]),t._v(" 访问 nginx")]),t._v(" "),s("p",[t._v("默认是80端口。注意：是否关闭防火墙。")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost sbin]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## systemctl stop firewalld.service")]),t._v("\n")])])]),s("h3",{attrs:{id:"nginx配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置文件"}},[t._v("#")]),t._v(" nginx配置文件")]),t._v(" "),s("p",[t._v("在 nginx.conf 的注释符号为： #；每个指令必须有分号结束")]),t._v(" "),s("p",[t._v("1.全局块")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#user  nobody;")]),t._v("\nworker_processes  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  notice;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  info;")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid        logs/nginx.pid;")]),t._v("\n\n")])])]),s("blockquote",[s("p",[t._v("#user  nobody; 表示配置用户，默认用户为nobody（nobody表示任何用户），该指令的作用是哪些用户可以启动worker进程。nginx在启动后是有多个进程相互协助工作的，默认是一个master主进程和一个worker工作进程。其中主进程负责接收客户端的请求，worker进程负责处理请求，响应结果。你也可以把前面的注释去掉，写上一个具体的用户 user root")]),t._v(" "),s("p",[t._v("worker_processes：工作进程的个数，默认为1，一般来说会设置成cpu核数的2倍；如果你设置一个数值为3，那么nginx在启动的时候会有3个workder进程和一个master主进程")]),t._v(" "),s("p",[t._v("error_log：nginx的日志级别配置， 默认为cri，级别从低到高为debug, info, notice, warn, error, crit ；如果你要调成notice日志级别，只要#error_log  logs/error.log  notice;前面的注释去掉即可，日志位置在安装nginx的时候就已经指定")]),t._v(" "),s("p",[t._v("pid：指定nginx进程运行文件存放地址")])]),t._v(" "),s("p",[t._v("2.events块")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("events "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\taccept_mutex on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置网路连接序列化，防止惊群现象发生，默认为on")]),t._v("\n\tmulti_accept on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置一个进程是否同时接受多个网络连接，默认为off")]),t._v("\n    worker_connections  1024"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#每个worker进程最大连接数，这个值最大可设置为：65535")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##惊群现象：一个网路连接到来，多个睡眠的进程被同时叫醒，但只有一个进程能获得链接，这样会影响系统性能")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##单台nginx最大连接数为 worker_processes*worker_connections")]),t._v("\n")])])]),s("p",[t._v("3.http块")]),t._v(" "),s("p",[t._v("可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置")]),t._v(" "),s("p",[t._v("4.server块")]),t._v(" "),s("p",[t._v("配置虚拟主机的相关参数，一个http中可以有多个server")]),t._v(" "),s("p",[t._v("5.location块")]),t._v(" "),s("p",[t._v("配置请求的路由，以及各种页面的处理情况")]),t._v(" "),s("h3",{attrs:{id:"配置虚拟主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置虚拟主机"}},[t._v("#")]),t._v(" 配置虚拟主机")]),t._v(" "),s("p",[t._v("就是在一台服务器启动多个网站。如何区分不同的网站：")]),t._v(" "),s("p",[t._v("1、域名不同")]),t._v(" "),s("p",[t._v("2、端口不同")]),t._v(" "),s("h4",{attrs:{id:"通过端口区分不同虚拟机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过端口区分不同虚拟机"}},[t._v("#")]),t._v(" 通过端口区分不同虚拟机")]),t._v(" "),s("h5",{attrs:{id:"打开nginx的配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打开nginx的配置文件"}},[t._v("#")]),t._v(" 打开Nginx的配置文件：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## vim  conf/nginx.conf")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/host.access.log  main;")]),t._v("\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("说明：一个server节点就是一个虚拟主机，html是nginx安装目录下的html目录(静态页面存放的位置,也可以使用绝对路径)，可以配置多个server，配置了多个虚拟主机")])]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v(" server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       81"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/host.access.log  main;")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("81"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index  index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h5",{attrs:{id:"重新加载配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重新加载配置文件"}},[t._v("#")]),t._v(" 重新加载配置文件")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost nginx]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## sbin/nginx -s reload")]),t._v("\n")])])]),s("p",[t._v("注意: "),s("strong",[t._v("一定要关闭防火墙")])]),t._v(" "),s("h4",{attrs:{id:"通过域名区分虚拟主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过域名区分虚拟主机"}},[t._v("#")]),t._v(" 通过域名区分虚拟主机")]),t._v(" "),s("h5",{attrs:{id:"什么是域名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是域名"}},[t._v("#")]),t._v(" "),s("strong",[t._v("什么是域名")])]),t._v(" "),s("p",[t._v("域名就是网站。如www.baidu.com  www.taobao.com   "),s("a",{attrs:{href:"http://www.jd.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.jd.com")])]),t._v(" "),s("p",[t._v("dns服务器：把域名解析为ip地址。保存的就是域名和ip的映射关系")]),t._v(" "),s("p",[t._v("一级域名：一串字符串中间一个点隔开，例如baidu.com。是互联网DNS等级之中的最高级的域，它保存于DNS根域的名字空间中")]),t._v(" "),s("p",[t._v("二级域名：是一个一级域名以下的主机名，一串字符串中间两个“.”隔开，例如www.baidu.com。二级域名就是最靠近顶级域名左侧的字段")]),t._v(" "),s("p",[t._v("三级域名：二级域名的子域名，特征是包含三个“.”，例如___.___.baidu.com ，___上可以填写任意内容，都属于三级域名")]),t._v(" "),s("p",[t._v("我们接触的顶级域名(一级域名)又分为两类：一是国家和地区顶级域名，例如中国是cn；二是国际顶级域名，例如表示工商企业的.com，表示非盈利组织的.org，表示网络商的.net，edu为学校单位，.gov为政府机构等")]),t._v(" "),s("p",[t._v("一个域名对应一个ip地址，一个ip地址可以被多个域名绑定。")]),t._v(" "),s("p",[t._v("实验1：")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("修改window的hosts文件：（C:\\Windows\\System32\\drivers\\etc）\n注意：该文件如果配置域名和ip的映射关系，如果hosts文件中配置了域名和ip的对应关系，不需要走dns服务器。\n")])])]),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("192"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("128"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("129 www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n192"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("128"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("129 www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("163"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n")])])]),s("p",[t._v("注意：如果修改后映射不生效，可参考以下解决办法：")]),t._v(" "),s("p",[t._v("1.该文件保存时未使用ansi编码进行保存，解决办法：更改文件编码为ansi进行保存")]),t._v(" "),s("p",[t._v("2.启用了DNS Client服务（该服务为DNS解析的缓存服务）解决办法：将该服务停用；如果该服务为自动启用，请改为手动启用")]),t._v(" "),s("h5",{attrs:{id:"nginx的配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx的配置"}},[t._v("#")]),t._v(" "),s("strong",[t._v("Nginx的配置")])]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/host.access.log  main;")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index  index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("163"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/host.access.log  main;")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("163"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index  index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[t._v("#")]),t._v(" 反向代理")]),t._v(" "),s("p",[t._v("正向代理：如果把局域网外的Internet想象成一个巨大的资源库,则局域网中的客户端要访问Internet ,则需要通过代理服务器来访问,这种代理服务就称为正向代理。代理的是客户端")]),t._v(" "),s("p",[t._v("反向代理：其实客户端对代理是无感知的,因为喜户端不需要任何配置就可以访问,我们只需要将请求发送到反向代理服务器,由反向代理服务器去选择目标服务器获取数据后,再返回给客户端,此时反向代理服务器和目标服务器对外就是一个服务器 ,暴露的是代理服务器地址,隐藏了真实服务器IP地址。代理的是服务器")]),t._v(" "),s("blockquote",[s("p",[t._v("在这种情况下，在客户端看来，"),s("code",[t._v("Nginx")]),t._v(" + "),s("code",[t._v("服务端")]),t._v(" 整体扮演了一个更大意义上的服务端的概念。")])]),t._v(" "),s("h3",{attrs:{id:"案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),s("p",[t._v("1、后端工程：把一个springboot工程2个打包，分别指定运行端口8080和8081，在linux运行起来")]),t._v(" "),s("p",[t._v("springboot工程：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${server.port}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n运行端口"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),s("p",[t._v("2、nginx配置")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v('server {\n    listen       80;\n    server_name  www.woniu.com;\n \n    location /api {\n        proxy_pass  http://127.0.0.1:8080;\n        rewrite "^/api/(.*)$" /$1 break;  \n    } \n \tlocation / {\n         root   html;\n         index  index.html index.htm;\n     }\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   html;\n    } \n} \n')])])]),s("blockquote",[s("p",[t._v("说明：当我们访问www.woniu.com时，默认请求nginx里面的html目录的index.html.当我们请求www.woniu.com/api/hello时，由于以/api开头，则匹配第一个location，然后去请求http://127.0.0.1:8080这个服务器，那么问题来了，nginx转发的请求是http://127.0.0.1:8080/api/hello还是http://127.0.0.1:8080/api")]),t._v(" "),s("p",[t._v('这里就要注意转发规则：大家可以看看这句话： rewrite "^/user/(.*)$" /$1 break; 也就是路径重写  $1代表第一个（）里面的内容，如果有第二.....多个括号，则同样的用$2.....表示即可，这个正则表达式意思是说 以 api开头的被替换成/,( )里面的内容就是用$1占位符来表示，变相的把api截掉了')])]),t._v(" "),s("h2",{attrs:{id:"负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),s("p",[t._v("负载均衡（load balance）就是将负载分摊到多个操作单元上执行，从而提高服务的可用性和响应速度，带给用户更好的体验")]),t._v(" "),s("h3",{attrs:{id:"负载均衡的配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡的配置"}},[t._v("#")]),t._v(" 负载均衡的配置")]),t._v(" "),s("p",[t._v("通过 Nginx 中的 "),s("strong",[t._v("upstream")]),t._v(" 指令可以实现负载均衡，再该指令中能够配置负载均衡服务器组")]),t._v(" "),s("p",[t._v("目前负载均衡有 4 种典型的配置方式。分别是：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("##")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("负载均衡方式")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("特点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("轮询方式")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认方式。每个请求按照时间顺序逐一分配到不同的后端服务器进行处理。如果有服务器宕机，会自动删除。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("权重方式")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("利用 weight 指定轮循的权重比率，与访问率成正比。用于后端服务器性能不均衡的情况。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ip_hash 方法")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("每个请求按照访问 IP 的 hash 结果分配，这样可以使每个方可固定一个后端服务器，可以解决 Session 共享问题。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("第三方模块")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("取决于所采用的第三方模块的分配规则。")])])])]),t._v(" "),s("p",[t._v("在 upstream 指定的服务器组中，若每个服务器的权重都设置为 1（默认值）时，表示当前的负载均衡是一般轮循方式")]),t._v(" "),s("h4",{attrs:{id:"准备工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),s("p",[t._v("编写后台（SpringBoot）项目，简单起见，以占用不同的端口的形式启动 2 次，并在返回的信息中返回各自所占用的端口号")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${server.port}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"code"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10086"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"负载方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载方式"}},[t._v("#")]),t._v(" 负载方式")]),t._v(" "),s("h5",{attrs:{id:"_6-3-1-轮询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-轮询"}},[t._v("#")]),t._v(" 6.3.1 轮询")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("upstream xxx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    server 127"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server 127"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:9090"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nupstream yyy "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    server 127"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server 127"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy_pass http:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("user "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy_pass http:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("yyy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上述的配置中有 2 点需要注意的：")]),t._v(" "),s("p",[t._v("1、"),s("strong",[t._v("upstream")]),t._v(" 配置项在 "),s("strong",[t._v("http")]),t._v(" 配置项内，但是在 "),s("strong",[t._v("server")]),t._v(" 配置项外，它们 3 者整体结构如下（不要写错地方了）：")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 它们两者平级")]),t._v("\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    upstream "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("2、你所配置的 "),s("strong",[t._v("upstream")]),t._v(" 的 name 是自定义的，但是不要出现 "),s("strong",[s("code",[t._v("-")])]),t._v(" 号，否则会和 tomcat 有冲突。")]),t._v(" "),s("p",[t._v("测试：你持续访问 "),s("code",[t._v("http://127.0.0.1/api/hello")]),t._v(" 你会发现页面的内容会是交替出现 "),s("code",[t._v("8080")]),t._v(" 端口和 "),s("code",[t._v("9090")]),t._v(" 端口")]),t._v(" "),s("h5",{attrs:{id:"_6-3-2-加权轮询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-加权轮询"}},[t._v("#")]),t._v(" 6.3.2 加权轮询")]),t._v(" "),s("p",[t._v("加权轮循就是在轮循的基础上，为每个单点加上权值。权值越重的单点，承担的访问量自然也就越大。")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("upstream xxx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    server 127"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:8080 weight=1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server 127"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:9090 weight=2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("按照上述配置，"),s("code",[t._v("9090")]),t._v(" 端口的服务将承担 2/3 的访问量，而 "),s("code",[t._v("8080")]),t._v(" 端口则承担 1/3 的访问量。")]),t._v(" "),s("p",[t._v("将配置改为上述样子并重启 Nginx 后，再持续访问 "),s("code",[t._v("http://127.0.0.1/api/hello")]),t._v(" 你会发现 "),s("code",[t._v("8080")]),t._v(" 端口和 "),s("code",[t._v("9090")]),t._v(" 端口会以 "),s("code",[t._v("1-2-1-2-...")]),t._v(" 的次数交替出现。")]),t._v(" "),s("p",[t._v("除了 "),s("strong",[t._v("weight")]),t._v(" 外，常见的状态参数还有：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("配置方式")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("max_fails")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("允许请求失败次数，默认为 1 。通常和下面的 fail_timeout 连用。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("fail_timeout")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在经历了 max_fails 次失败后，暂停服务的时长。这段时间内，这台服务器 Nginx 不会请求这台 Server")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("backup")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("预留的备份机器。它只有在其它非 backup 机器出现故障时或者忙碌的情况下，才会承担负载任务。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("down")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("表示当前的 server 不参与负载均衡。")])])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("upstream web_server {\n    server 192.168.78.128 weight=1 max_fails=1 fail_timeout=30s;\n    server 192.168.78.200 weight=2 max_fails=1 fail_timeout=30s;\n    server 192.168.78.201 backup;\n    server 192.168.78.210 down;\n}\n")])])]),s("h5",{attrs:{id:"_6-3-3-ip-hash-负载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-3-ip-hash-负载"}},[t._v("#")]),t._v(" 6.3.3 ip_hash 负载")]),t._v(" "),s("p",[t._v("ip_hash 方式的负载均衡，是将每个请求按照访问 IP 的 hash 结果分配，这样就可以使来自同一个 IP 的客户端固定访问一台 Web 服务器，从而就解决了 Session 共享问题")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("upstream xxx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ip_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server 127"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server 127"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:9090"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用上例配置后，你会发现无论你请求多少次 "),s("code",[t._v("http://127.0.0.1/api/hello")]),t._v(" 你所看到的端口始终是 "),s("code",[t._v("8080")]),t._v(" 和 "),s("code",[t._v("9090")]),t._v(" 中的某一个。")]),t._v(" "),s("h3",{attrs:{id:"将客户端浏览器的-ip-传递到后台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将客户端浏览器的-ip-传递到后台"}},[t._v("#")]),t._v(" 将客户端浏览器的 IP 传递到后台")]),t._v(" "),s("p",[t._v("对于后台而言，它所面对的『"),s("strong",[t._v("客户端")]),t._v("』就是 Nginx，后台看不见『"),s("strong",[t._v("客户端")]),t._v("』浏览器。这就意味着，你如果你需要在后台获取客户端浏览器的 IP 地址，你需要明确指出让 Nginx 『"),s("strong",[t._v("额外地多携带")]),t._v("』一些数据。")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy_pass http:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header X"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Real"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## proxy_set_header Cookie $http_cookie;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## proxy_set_header Host $http_host;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在 Spring Boot 的 Controller 中你有 2 种方式来获得这个额外的信息：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X-Real-IP"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" realIP2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" realIP1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X-Real-IP"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"nginx解决前后端跨域-了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx解决前后端跨域-了解"}},[t._v("#")]),t._v(" nginx解决前后端跨域(了解)")]),t._v(" "),s("p",[t._v("Spring Boot 不提供任何动态页面、资源，只提供 JSON 格式数据")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    include       mime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    default_type  application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("octet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sendfile        on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    keepalive_timeout  65"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## TCP 连接存活 65 秒")]),t._v("\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Nginx 监听 localhost:80 端口")]),t._v("\n        listen       80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 访问 URI 根路径时，返回 Nginx 根目录下的 html 目录下的 index.html 或 index.htm")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index  index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## URI 路径以 /api 开头的将转交给『别人』处理")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass http:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost:8080"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 出现 500、502、503、504 错误时，返回 Nginx 根目录下的 html 目录下的 50x.html 。")]),t._v("\n        error_page   500 502 503 504  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("50x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n        location = "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("50x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("index.html内容，放nginx运行")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./js/jquery-1.11.3.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://192.168.128.128:80/api/hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意这里的 URL")]),t._v("\n  type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("success")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"h2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"跨域访问成功:"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"h2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"跨域失败!!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("首先当我们访问192.168.128.128时。显示index.html首页内容。在首页加载时异步请求http://127.0.0.1:80/api/hello的请求，被Nginx 接收后，Nginx 会『帮』我们去访问 http://127.0.0.1:8080"),s("code",[t._v("的")]),t._v("/api/hello，并将结果再返回给客户端了浏览器")]),t._v(" "),s("h3",{attrs:{id:"nginx搭建文件服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx搭建文件服务器"}},[t._v("#")]),t._v(" nginx搭建文件服务器")]),t._v(" "),s("p",[t._v("安装好nginx之后，做相关配置")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t    root   /opt/soft/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#可以在这个目录放置一些软件包，供别人下载")]),t._v("\n\t    autoindex on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启索引功能  这句话很重要")]),t._v("\n        autoindex_exact_size off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 关闭计算文件确切大小（单位bytes），只显示大概大小（单位kb、mb、gb）")]),t._v("\n        autoindex_localtime on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 显示本机时间而非 GMT 时间")]),t._v("\n        charset utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 避免中文乱码 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## root html;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## index  index.html index.htm;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("测试：192.172.0.11")]),t._v(" "),s("h2",{attrs:{id:"docker-分隔"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-分隔"}},[t._v("#")]),t._v(" -----------  Docker 分隔   -----------")]),t._v(" "),s("h2",{attrs:{id:"docker-容器引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器引擎"}},[t._v("#")]),t._v(" Docker 容器引擎")]),t._v(" "),s("h3",{attrs:{id:"nacos-的下载和安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nacos-的下载和安装"}},[t._v("#")]),t._v(" Nacos 的下载和安装")]),t._v(" "),s("p",[t._v("首先去 nacos 的 github 地址下载 release 安装包。"),s("a",{attrs:{href:"https://github.com/alibaba/nacos/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载地址")])]),t._v(" "),s("p",[t._v("进入到 nacos/bin 目录下面，"),s("strong",[t._v("startup")]),t._v(" 命令用于启动 nacos ，"),s("strong",[t._v("shutdown")]),t._v(" 命令用于停掉 nacos 。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果你是 windows 系统")]),t._v(" "),s("p",[t._v("执行 "),s("strong",[t._v("startup.cmd -m standalone")]),t._v(" 启动，单模式启动")])]),t._v(" "),s("li",[s("p",[t._v("如果你是 linux/unix 系统")]),t._v(" "),s("p",[t._v("执行 "),s("strong",[t._v("startup.sh -m standalone")]),t._v(" 启动。")])]),t._v(" "),s("li",[s("p",[t._v("如果你使用的是 docker-compose")]),t._v(" "),s("p",[t._v("编写docker-compose.yml文件   启动该文件 命令： docker-compose up")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nacos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nacos/nacos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nacos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("standalone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" PREFER_HOST_MODE=hostname\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MODE=standalone   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单机模式启动")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./8848/logs/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/home/nacos/logs   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#前面是宿主机名  后面是容器目录名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./8848/init.d/custom.properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/home/nacos/init.d/custom.properties\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8848:8848"')]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("nacos 的默认服务端口是 "),s("strong",[t._v("8848")]),t._v(" ，启动完成之后通过浏览器访问 nacos：http://127.0.0.1:8848/nacos 。")]),t._v(" "),s("h3",{attrs:{id:"docker-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-概念"}},[t._v("#")]),t._v(" docker 概念")]),t._v(" "),s("blockquote",[s("p",[t._v("1、Docker 是一个开源的应用容器引擎\n2、诞生于 2013 年初，基于 Go 语言实现， dotCloud 公司出品（后改名为Docker Inc）\n3、Docker 是一个可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器引擎（好比汽车发动机），然后发布到任何流行的 Linux 机器上。\n4、容器是完全使用沙箱机制，相互隔离\n5、容器性能开销极低。\n6、Docker 从 17.03 版本之后分为 CE（Community Edition: 社区版） 和 EE（Enterprise Edition: 企业版）")])]),t._v(" "),s("h4",{attrs:{id:"安装docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[t._v("#")]),t._v(" 安装docker")]),t._v(" "),s("p",[t._v("Docker可以运行在MAC、Windows、CentOS、UBUNTU等操作系统上，本课程基于CentOS 7 安装Docker。\n官网：https://www.docker.com")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## yum 包更新到最新")]),t._v("\nyum update -y    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 安装需要的软件包")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y yum-utils device-mapper-persistent-data lvm2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 设置yum源")]),t._v("\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 华为的镜像服务器 可提高下载速度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s+download.docker.com+repo.huaweicloud.com/docker-ce+'")]),t._v(" /etc/yum.repos.d/docker-ce.repo\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 安装docker")]),t._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y docker-ce   \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看docker版本，验证是否验证成功")]),t._v("\ndocker -v        \n")])])]),s("blockquote",[s("p",[t._v("考虑到从 docker 官方的仓库下载 docker-ce 有时会比较慢，可以使用下述命令将下载网址改为华为的镜像服务器：\nsudo sed -i 's+download.docker.com+repo.huaweicloud.com/docker-ce+' /etc/yum.repos.d/docker-ce.repo")])]),t._v(" "),s("h4",{attrs:{id:"docker相关概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker相关概念"}},[t._v("#")]),t._v(" docker相关概念")]),t._v(" "),s("ul",[s("li",[t._v("镜像（Image）：Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:16.04 就包含了完整的一套 Ubuntu16.04 最小系统的 root 文件系统。")]),t._v(" "),s("li",[t._v("容器（Container）：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和对象一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。")]),t._v(" "),s("li",[t._v("仓库（Repository）：仓库可看成一个代码控制中心，用来保存镜像。")])]),t._v(" "),s("h4",{attrs:{id:"配置-docker-镜像加速器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-docker-镜像加速器"}},[t._v("#")]),t._v(" 配置 Docker 镜像加速器")]),t._v(" "),s("p",[t._v("默认情况下，将来从docker hub（https://hub.docker.com/）上下载docker镜像，太慢。一般都会配置镜像加速器：")]),t._v(" "),s("ul",[s("li",[t._v("USTC：中科大镜像加速器（https://docker.mirrors.ustc.edu.cn）")]),t._v(" "),s("li",[t._v("阿里云")]),t._v(" "),s("li",[t._v("网易云")]),t._v(" "),s("li",[t._v("腾讯云")])]),t._v(" "),s("p",[t._v("阿里云镜像加速器配置")]),t._v(" "),s("p",[t._v("首先登陆阿里云，点击控制台，然后再点击左边的像三字一样的图标，再点击产品与服务，在输入关键字地方搜索“镜像”，会显示容器镜像服务，点击“容器镜像服务”，在左侧的最下方有镜像中心（镜像加速器），点击镜像加速器，复制如下代码到linux执行即可")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// 修改 /etc/docker/daemon.json 文件内容 提高下载速度\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /etc/docker\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" /etc/docker/daemon.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<-")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'EOF\'\n{\n  "registry-mirrors": ["https://88y9upwp.mirror.aliyuncs.com"]\n}\nEOF')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl daemon-reload\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart docker\n")])])]),s("h2",{attrs:{id:"docker-网络模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-网络模式"}},[t._v("#")]),t._v(" Docker 网络模式")]),t._v(" "),s("blockquote",[s("p",[t._v("在创建容器时可设置其网络模式: docker run -id -p 3307 :3306 --name=c_ mysql -e --net=host MYSQL_ ROOT_ PASSWORD=root mysql:5.6")])]),t._v(" "),s("p",[t._v("四类网络模式:  https://segmentfault.com/a/1190000040335988")]),t._v(" "),s("h3",{attrs:{id:"bridge-模式-桥接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bridge-模式-桥接"}},[t._v("#")]),t._v(" bridge 模式 - 桥接")]),t._v(" "),s("blockquote",[s("p",[t._v("当Docker进程启动时，会在主机上创建一个名为docker0的虚拟网桥，此主机上启动的Docker容器会连接到这个虚拟网桥上。虚拟网桥的工作方式和物理交换机类似，这样主机上的所有容器就通过交换机连在了一个二层网络中。")])]),t._v(" "),s("p",[t._v("从docker0子网中分配一个IP给容器使用，并设置docker0的IP地址为容器的默认网关。在主机上创建一对虚拟网卡veth pair设备，Docker将veth pair设备的一端放在新创建的容器中，并命名为eth0（容器的网卡），另一端放在主机中，以vethxxx这样类似的名字命名，并将这个网络设备加入到docker0网桥中。可以通过brctl show命令查看。")]),t._v(" "),s("p",[t._v("bridge模式是docker的默认网络模式，不写--net参数，就是bridge模式。使用docker run -p时，docker实际是在iptables做了DNAT规则，实现端口转发功能。可以使用iptables -t nat -vnL查看。")]),t._v(" "),s("h3",{attrs:{id:"host-模式-仅主机模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#host-模式-仅主机模式"}},[t._v("#")]),t._v(" host 模式 - 仅主机模式")]),t._v(" "),s("p",[t._v("如果启动容器的时候使用host模式，那么这个容器将不会获得一个独立的Network Namespace，而是和宿主机共用一个Network Namespace。容器将不会虚拟出自己的网卡，配置自己的IP等，而是使用宿主机的IP和端口。但是，容器的其他方面，如文件系统、进程列表等还是和宿主机隔离的")]),t._v(" "),s("blockquote",[s("p",[t._v("使用host模式的容器可以直接使用宿主机的IP地址与外界通信，容器内部的服务端口也可以使用宿主机的端口，不需要进行NAT，host最大的优势就是网络性能比较好，但是docker host上已经使用的端口就不能再用了，网络的隔离性不好。")])]),t._v(" "),s("h3",{attrs:{id:"container-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#container-模式"}},[t._v("#")]),t._v(" container 模式")]),t._v(" "),s("p",[t._v("这个模式指定新创建的容器和已经存在的一个容器共享一个 Network Namespace，而不是和宿主机共享。新创建的容器不会创建自己的网卡，配置自己的 IP，而是和一个指定的容器共享 IP、端口范围等。同样，两个容器除了网络方面，其他的如文件系统、进程列表等还是隔离的。两个容器的进程可以通过 lo 网卡设备通信。")]),t._v(" "),s("h4",{attrs:{id:"none模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#none模式"}},[t._v("#")]),t._v(" none模式")]),t._v(" "),s("p",[t._v("使用none模式，Docker容器拥有自己的Network Namespace，但是，并不为Docker容器进行任何网络配置。也就是说，这个Docker容器没有网卡、IP、路由等信息。需要我们自己为Docker容器添加网卡、配置IP等。")]),t._v(" "),s("p",[t._v("这种网络模式下容器只有lo回环网络，没有其他网卡。none模式可以在容器创建时通过--network=none来指定。这种类型的网络没有办法联网，封闭的网络能很好的保证容器的安全性。")]),t._v(" "),s("h2",{attrs:{id:"docker-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-命令"}},[t._v("#")]),t._v(" Docker 命令")]),t._v(" "),s("h3",{attrs:{id:"进程相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程相关命令"}},[t._v("#")]),t._v(" 进程相关命令")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("systemctl start docker    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动docker服务")]),t._v("\nsystemctl stop docker     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#停止docker服务 ")]),t._v("\nsystemctl restart docker  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重启docker服务 ")]),t._v("\nsystemctl status docker   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看docker服务状态")]),t._v("\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" docker   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开机启动docker服务")]),t._v("\n")])])]),s("h3",{attrs:{id:"镜像相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像相关命令"}},[t._v("#")]),t._v(" 镜像相关命令")]),t._v(" "),s("p",[t._v("1、查看镜像: 查看本地所有的镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker images      ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker images –q ## 查看所有镜像的id")]),t._v("\n")])])]),s("p",[t._v("2、搜索镜像:从网络中查找需要的镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker imagesxxxxxxxxxx docker imagesdocker search 镜像名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker search  redisshell")]),t._v("\n")])])]),s("p",[t._v("3、拉取镜像:从Docker仓库下载镜像到本地，镜像名称格式为 名称:版本号，如果版本号不指定则是最新的版本，如果不知道镜像版本，可以去docker hub 搜索对应镜像查看。 https://hub.docker.com/_/docker")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker pull 镜像名称:版本号\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker pull redis:5.0 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker pull centos:7 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker pull mysql:5.6  |  docker pull mysql:8.0.25 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker pull tomcat:8 弃用")]),t._v("\n\t\t\t\t   docker pull openjdk:8\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker pull nginx")]),t._v("\n\ndocker pull java:8\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## minio 文件对象存储 类似阿里云oss")]),t._v("\ndocker pull minio/minio \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 安装消息队列")]),t._v("\ndocker pull rabbitmq:management\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 拉取 wordpress 主题网站镜像")]),t._v("\ndocker pull wordpress \n")])])]),s("p",[t._v("4、删除镜像: 删除本地镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// 可根据 docker images 查询镜像id镜像删除\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker rmi 镜像id")]),t._v("\n// 删除所有镜像\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker rmi `docker images -q`")]),t._v("\n")])])]),s("h3",{attrs:{id:"容器相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器相关命令"}},[t._v("#")]),t._v(" 容器相关命令")]),t._v(" "),s("p",[t._v("1、查看容器")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker ps       ## 查看正在运行的容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker ps -a    ## 查看所有容器 （包括没有运行的容器）")]),t._v("\n")])])]),s("p",[t._v("2、创建并启动容器")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("docker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("it "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name=容器名称 镜像名称:版本 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建并自动进入容器,当输入exit 退出容器并回到宿主机")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run -it --name=c1 centos:7 /bin/bash  ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建容器 但不进入容器 后台运行 可使用命令进入 且退出不会关闭容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run -id --name=c2 centos:7\t\t")]),t._v("\n\ndocker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name=java_apai "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 2022:2022 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 2023:2023 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 2024:2024 java:8\n")])])]),s("blockquote",[s("p",[t._v("参数说明：")]),t._v(" "),s("p",[t._v("-i：保持容器运行。通常与 -t 同时使用。加入it这两个参数后，容器创建后自动进入容器中，退出容器后（执行命令exit），容器自动关闭")]),t._v(" "),s("p",[t._v("-t：为容器重新分配一个伪输入终端，通常与 -i 同时使用")]),t._v(" "),s("p",[t._v("-d：以守护（后台）模式运行容器。创建一个容器在后台运行，需要使用docker exec 进入容器。退出后，容器不会关闭")]),t._v(" "),s("p",[t._v("/bin/bash 这是表示载入容器后运行bash ,docker中必须要保持一个进程的运行，要不然整个容器就会退出。这个就表示启动容器后启动bash。默认会启动一个bash，可以忽略不写")])]),t._v(" "),s("p",[t._v("3、进入容器")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("docker exec 参数  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bash      #进入容器  注意 此处的"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bash不能省略\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动容器  后台启动")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("#docker "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("c2 centos"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入容器  docker exec -it 容器名称 /bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("#docker exec "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("it c2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 退出容器 此时容器还是在运行着的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("#exit        \n")])])]),s("p",[t._v("4、启动容器")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v(" 容器名称\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker start c1")]),t._v("\n")])])]),s("p",[t._v("5、停止容器运行")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("docker stop 容器名\n")])])]),s("p",[t._v("6、删除容器")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" 容器名称       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果容器是运行状态则删除失败，需要停止容器才能删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker rm c1")]),t._v("\n")])])]),s("p",[t._v("7、查看容器信息")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("docker inspect 容器名称\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker inspect  c1")]),t._v("\n")])])]),s("p",[t._v("8、查看docker日志")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("docker logs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("tail 行数 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f  容器名   \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看某个容器末尾300行的日志内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("#docker logs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("tail  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f app"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jar  \n")])])]),s("p",[t._v("9、docker容器安装命令")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("apt"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("get  update\napt"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("get  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y install net"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tools  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" yum "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("10、用于容器与主机之间的数据拷贝")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将主机/root/123.war文件拷贝到容器96f7f14e99ab的/root目录下")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("#docker cp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123.")]),t._v("war "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("96f")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7f")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14e99")]),t._v("ab"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("#docker cp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Apai")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Login")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5920698f")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("ad7"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将容器96f7f14e99ab的/www目录拷贝到主机的/tmp目录中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("#docker cp  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5920698f")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("ad7"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tmp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),s("h4",{attrs:{id:"配置数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置数据卷"}},[t._v("#")]),t._v(" 配置数据卷")]),t._v(" "),s("p",[t._v("语法：docker run ... –v 宿主机目录(文件):容器内目录(文件) ...")]),t._v(" "),s("p",[t._v("案例1：")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),t._v("docker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("it "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name=c3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data_container centos:7 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bash\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),t._v("docker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("it "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name=c4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("contai1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data1:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("contai2 centos:7\n")])])]),s("blockquote",[s("p",[t._v("注意事项：")]),t._v(" "),s("p",[t._v("1、目录必须是绝对路径 （宿主机和容器目录都是绝对路径）\n2、如果目录不存在，会自动创建\n3、可以挂载多个数据卷")]),t._v(" "),s("p",[t._v("配置数据卷后，在/root/data下创建文件，发现会同步到c3容器的data_container目录中，同理反过来也一样，当删除容器后，此时并不影响宿主机/root/data里的内容")])]),t._v(" "),s("p",[t._v("案例2：多容器进行数据交换")]),t._v(" "),s("p",[t._v("步骤：")]),t._v(" "),s("p",[t._v("1、创建启动c3数据卷容器，使用 –v 参数 设置数据卷")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run –it --name=c3 –v /volume centos:7 /bin/bash ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker inspect c3      #查看c3容器")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("-v 后面的/volume是容器的目录，那么这个宿主机的目录为什么不见了呢?其实这个时候linux会自动创建一个目录（目录名很长）作为源目录和/volume容器目录相对应。可以通过  docker inspect c3 查看c3容器")])]),t._v(" "),s("p",[t._v("2、创建启动 c1 c2 容器，使用 –-volumes-from 参数 设置数据卷")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run –it --name=c1 --volumes-from c3 centos:7 /bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run –it --name=c2 --volumes-from c3 centos:7 /bin/bash  ")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("此时c1和c2 挂载到和c3相同的宿主机的目录，在c3容器创建内容，c1和c2都会自动同步  (也就是说在c1和c2的根目录下也有 volume文件夹)\n[root@localhost ~]#docker inspect c1\n[root@localhost ~]#docker inspect c2\n发现c1 c2的宿主机目录和c3相同")])]),t._v(" "),s("h4",{attrs:{id:"数据卷小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据卷小结"}},[t._v("#")]),t._v(" 数据卷小结")]),t._v(" "),s("p",[t._v("1、数据卷概念：宿主机的一个目录或文件\n2、数据卷作用：容器数据持久化、客户端和容器数据交换、容器间数据交换\n3、数据卷容器：创建一个容器，挂载一个目录，让其他容器继承自该容器( --volume-from )。通过简单方式实现数据卷配置")]),t._v(" "),s("h2",{attrs:{id:"docker-镜像制作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像制作"}},[t._v("#")]),t._v(" Docker 镜像制作")]),t._v(" "),s("h3",{attrs:{id:"docker-镜像原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像原理"}},[t._v("#")]),t._v(" Docker 镜像原理")]),t._v(" "),s("blockquote",[s("p",[t._v("本质是一个分层文件系统,由一层一层的文件系统叠加而成，最底端是 bootfs，并使用宿主机的bootfs ，第二层是 root文件系统rootfs，称为base image，然后再往上可以叠加其他的镜像文件，这种层级的文件系统被称之为UnionFS，统一文件系统（Union File System）技术能够将不同的层整合成一个文件系统，为这些层提供了一个统一的视角，这样就隐藏了多层的存在，在用户的角度看来，只存在一个文件系统")]),t._v(" "),s("p",[t._v("一个镜像可以放在另一个镜像的上面。位于下面的镜像称为父镜像，最底部的镜像成为基础镜像，当从一个镜像启动容器时，Docker会在最顶层加载一个读写文件系统作为容器")])]),t._v(" "),s("h3",{attrs:{id:"普通方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通方式"}},[t._v("#")]),t._v(" 普通方式")]),t._v(" "),s("blockquote",[s("p",[t._v("有些容器镜像 会排除某些文件 如: Mysql ...    (具体见)")])]),t._v(" "),s("p",[t._v("制作tomcat镜像")]),t._v(" "),s("p",[t._v("1、首先创建一个tomcat容器")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost tomcat]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker run -id --name=tomcat1 -p 8080:8080 tomcat:8")]),t._v("\n")])])]),s("p",[t._v("2、把宿主机的某个war包拷贝到容器的某个目录里面，这样将来做镜像时，war包会加载到镜像里")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost tomcat]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker cp /root/test.war  #6598a89db5f6:/root   ")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意：不能将内容拷贝到tomcat容器的webapp目录和var目录里，如果放到里面，做成镜像时，该目录下的内容不会载入镜像里面")])]),t._v(" "),s("p",[t._v("3、把tomcat容器做成镜像")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost tomcat]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker commit 6598a89db5f6 woniu_tomcat:1.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost tomcat]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker images   #可以查看到woniu_tomcat:1.0镜像")]),t._v("\n")])])]),s("p",[t._v("4、把镜像做成压缩包 放到宿主机的某个位置")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker save -o woniu_tomcat.tar woniu_tomcat:1.0     #-o:output 压缩文件保存到/root目录下")]),t._v("\n")])])]),s("p",[t._v("5、把压缩文件载入镜像（第三方载入该压缩包）")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker load -i woniu_tomcat.tar  #镜像加载 -i  （input）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker images")]),t._v("\n")])])]),s("p",[t._v("6、用woniu_tomcat:1.0镜像做容器")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker run -id --name=tomcat2 -p:8081:8080 woniu_tomcat:1.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker exec -it tomcat2 bash  #进入容器，进入/root 可以看到test.war存在")]),t._v("\n")])])]),s("h3",{attrs:{id:"dockerfile方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile方式"}},[t._v("#")]),t._v(" dockerfile方式")]),t._v(" "),s("blockquote",[s("p",[t._v("制作docker镜像的一个文本文件,文件包含了一条条的指令，每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像，")])]),t._v(" "),s("p",[t._v("Dochub网址：https://hub.docker.com")]),t._v(" "),s("p",[s("strong",[t._v("Dockerfile关键字")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("关键字")]),t._v(" "),s("th",[t._v("作用")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("FROM")]),t._v(" "),s("td",[t._v("指定父镜像")]),t._v(" "),s("td",[t._v("指定dockerfile基于那个image构建")])]),t._v(" "),s("tr",[s("td",[t._v("MAINTAINER")]),t._v(" "),s("td",[t._v("作者信息")]),t._v(" "),s("td",[t._v("用来标明这个dockerfile谁写的")])]),t._v(" "),s("tr",[s("td",[t._v("LABEL")]),t._v(" "),s("td",[t._v("标签")]),t._v(" "),s("td",[t._v("用来标明dockerfile的标签 可以使用Label代替Maintainer 最终都是在docker image基本信息中可以查看")])]),t._v(" "),s("tr",[s("td",[t._v("RUN")]),t._v(" "),s("td",[t._v("执行命令")]),t._v(" "),s("td",[t._v('执行一段命令 默认是/bin/sh 格式: RUN command 或者 RUN ["command" , "param1","param2"]')])]),t._v(" "),s("tr",[s("td",[t._v("CMD")]),t._v(" "),s("td",[t._v("容器启动命令")]),t._v(" "),s("td",[t._v('提供启动容器时候的默认命令 和ENTRYPOINT配合使用.格式 CMD command param1 param2 或者 CMD ["command" , "param1","param2"]')])]),t._v(" "),s("tr",[s("td",[t._v("ENTRYPOINT")]),t._v(" "),s("td",[t._v("入口")]),t._v(" "),s("td",[t._v("一般在制作一些执行就关闭的容器中会使用")])]),t._v(" "),s("tr",[s("td",[t._v("COPY")]),t._v(" "),s("td",[t._v("复制文件")]),t._v(" "),s("td",[t._v("build的时候复制文件到image中")])]),t._v(" "),s("tr",[s("td",[t._v("ADD")]),t._v(" "),s("td",[t._v("添加文件")]),t._v(" "),s("td",[t._v("build的时候添加文件到image中 不仅仅局限于当前build上下文 可以来源于远程服务,      ADD 源路径 目标路径")])]),t._v(" "),s("tr",[s("td",[t._v("ENV")]),t._v(" "),s("td",[t._v("环境变量")]),t._v(" "),s("td",[t._v("指定build时候的环境变量 可以在启动的容器的时候 通过-e覆盖 格式ENV name=value")])]),t._v(" "),s("tr",[s("td",[t._v("ARG")]),t._v(" "),s("td",[t._v("构建参数")]),t._v(" "),s("td",[t._v("构建参数 只在构建的时候使用的参数 如果有ENV 那么ENV的相同名字的值始终覆盖arg的参数")])]),t._v(" "),s("tr",[s("td",[t._v("VOLUME")]),t._v(" "),s("td",[t._v("定义外部可以挂载的数据卷")]),t._v(" "),s("td",[t._v('指定build的image那些目录可以启动的时候挂载到文件系统中 启动容器的时候使用 -v 绑定 格式 VOLUME ["目录"]')])]),t._v(" "),s("tr",[s("td",[t._v("EXPOSE")]),t._v(" "),s("td",[t._v("暴露端口")]),t._v(" "),s("td",[t._v("定义容器运行的时候监听的端口 启动容器的使用-p来绑定暴露端口 格式: EXPOSE 8080 或者 EXPOSE 8080/udp")])]),t._v(" "),s("tr",[s("td",[t._v("WORKDIR")]),t._v(" "),s("td",[t._v("工作目录")]),t._v(" "),s("td",[t._v("指定容器内部的工作目录 如果没有创建则自动创建 如果指定/ 使用的是绝对地址 如果不是/开头那么是在上一条workdir的路径的相对路径")])]),t._v(" "),s("tr",[s("td",[t._v("USER")]),t._v(" "),s("td",[t._v("指定执行用户")]),t._v(" "),s("td",[t._v("指定build或者启动的时候 用户 在RUN CMD ENTRYPONT执行的时候的用户")])]),t._v(" "),s("tr",[s("td",[t._v("HEALTHCHECK")]),t._v(" "),s("td",[t._v("健康检查")]),t._v(" "),s("td",[t._v("指定监测当前容器的健康监测的命令 基本上没用 因为很多时候 应用本身有健康监测机制")])]),t._v(" "),s("tr",[s("td",[t._v("ONBUILD")]),t._v(" "),s("td",[t._v("触发器")]),t._v(" "),s("td",[t._v("当存在ONBUILD关键字的镜像作为基础镜像的时候 当执行FROM完成之后 会执行 ONBUILD的命令 但是不影响当前镜像 用处也不怎么大")])]),t._v(" "),s("tr",[s("td",[t._v("STOPSIGNAL")]),t._v(" "),s("td",[t._v("发送信号量到宿主机")]),t._v(" "),s("td",[t._v("该STOPSIGNAL指令设置将发送到容器的系统调用信号以退出。")])]),t._v(" "),s("tr",[s("td",[t._v("SHELL")]),t._v(" "),s("td",[t._v("指定执行脚本的shell")]),t._v(" "),s("td",[t._v("指定RUN CMD ENTRYPOINT 执行命令的时候 使用的shell")])])])]),t._v(" "),s("p",[t._v("案例2：定义dockerfile文件构建镜像，发布springboot项目")]),t._v(" "),s("p",[t._v("步骤1：创建dockerfile文件并编写内容")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost docker-file]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#vim springboot-dockerfile")]),t._v("\n编写内容如下：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" java:8\nMAINTAINER  woniu<woniu@woniu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn>\nADD springboot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar   \nCMD java "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar\n")])])]),s("blockquote",[s("p",[t._v("说明：")]),t._v(" "),s("p",[t._v("ADD springboot.jar app.jar   表示把宿主机的springboot.jar复制到镜像里并更名为app.jar,当用镜像做容器时，app.jar默认在容器的根目录")])]),t._v(" "),s("p",[t._v("步骤2：通过dockerfile构建镜像")]),t._v(" "),s("p",[t._v("特别注意: 最后有一个点  '   .   '")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost docker-file]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker build -f  ./springboot-dockerfile -t  springboot-app:1.0 .")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost docker-file]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker images")]),t._v("\n")])])]),s("p",[t._v("步骤3：通过springboot-app:1.0镜像创建容器")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost docker-file]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## docker run -it --name=app -p 8080:8080 springboot-app:1.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost docker-file]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker logs --tail 100 -f  app    #查看app容器的日志  末尾100行")]),t._v("\n")])])]),s("h2",{attrs:{id:"compose-服务编排"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compose-服务编排"}},[t._v("#")]),t._v(" Compose 服务编排")]),t._v(" "),s("blockquote",[s("p",[t._v("Docker Compose是“容器编排技术”。它由Python 语言编写，是Docker官方的一个开源项目，简单来讲，就是编排好一个系统中的众多容器的启动顺序，先启动A，再启动B，在启动C。")])]),t._v(" "),s("h3",{attrs:{id:"安装-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-compose"}},[t._v("#")]),t._v(" 安装 Compose")]),t._v(" "),s("p",[t._v("Compose目前已经完全支持Linux、Mac OS和Windows，在我们安装Compose之前，需要先安装Docker。下面我 们以编译好的二进制包方式安装在Linux系统中。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#chmod +x /usr/local/bin/docker-compose    ## 设置文件可执行权限")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker-compose -version\t\t\t\t\t ## 查看版本信息 ")]),t._v("\n")])])]),s("h3",{attrs:{id:"卸载-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#卸载-compose"}},[t._v("#")]),t._v(" 卸载 Compose")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#rm /usr/local/bin/docker-compose   ## 二进制包方式安装的，删除二进制文件即可")]),t._v("\n")])])]),s("h3",{attrs:{id:"comnpose的使用步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comnpose的使用步骤"}},[t._v("#")]),t._v(" Comnpose的使用步骤")]),t._v(" "),s("p",[t._v("1、利用 Dockerfile 定义运行环境镜像\n2、使用 docker-compose.yml 文件定义组成应用的各服务的运行顺序\n3、运行 docker-compose up 启动应用")]),t._v(" "),s("p",[t._v("案例: 具体详见  Docker 详情.md")]),t._v(" "),s("h2",{attrs:{id:"分隔"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分隔"}},[t._v("#")]),t._v(" ------------   分隔    ------------")]),t._v(" "),s("h2",{attrs:{id:"linux-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-常用命令"}},[t._v("#")]),t._v(" Linux 常用命令")]),t._v(" "),s("h3",{attrs:{id:"文件类-功能类-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件类-功能类-命令"}},[t._v("#")]),t._v(" 文件类 功能类 命令")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tar 解压缩 命令")]),t._v("\ntar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zxvf 压缩名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),t._v(" 目录名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看进程 端口信息")]),t._v("\nnetstat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tlnp\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据端口 关闭进程")]),t._v("\nkill "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" 端口号\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭防火墙")]),t._v("\nsystemctl stop firewalld"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将文件变为可执行文件")]),t._v("\nchmod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("x 文件\n")])])]),s("h3",{attrs:{id:"redis-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-命令"}},[t._v("#")]),t._v(" redis  命令")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动redis服务器")]),t._v("\ncd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入bin目录执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/redis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动redis客户端")]),t._v("\nredis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cli "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("h "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".174")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".128")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("\n")])])]),s("h3",{attrs:{id:"nginx-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-命令"}},[t._v("#")]),t._v(" nginx  命令")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入sbin目录 启动nginx")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/nginx \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭nginx：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s stop\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推荐使用：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s quit\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重启nginx： 1、先关闭后启动。 2、刷新配置文件：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s reload\n")])])]),s("h3",{attrs:{id:"运行jar包-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行jar包-命令"}},[t._v("#")]),t._v(" 运行jar包 命令")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 特点：当前ssh窗口被锁定，可按CTRL + C打断程序运行，或直接关闭窗口，程序退出")]),t._v("\njava "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jar XXX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 特定：当前ssh窗口不被锁定，但是当窗口关闭时，程序中止运行。 &代表在后台运行")]),t._v("\njava "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jar xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nohup 意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行")]),t._v("\nnohup java "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jar shareniu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nohup 命令执行作业时，缺省情况下的所有输出被重定向到nohup.out的文件中，除非另外指定了输出文件。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将command的输出重定向到out.file文件，即输出内容不打印到屏幕上，而是输出到out.file文件中。")]),t._v("\nnohup java "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jar shareniu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定端口")]),t._v("\njava "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jar XXX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\nnohup java "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jar XXX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),s("h3",{attrs:{id:"docker-命令-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-命令-2"}},[t._v("#")]),t._v(" Docker 命令")]),t._v(" "),s("blockquote",[s("p",[t._v("Docker")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进程相关命令")]),t._v("\nsystemctl start docker    #启动docker服务\nsystemctl stop docker     #停止docker服务 \nsystemctl restart docker  #重启docker服务 \nsystemctl status docker   #查看docker服务状态\nsystemctl enable docker   #开机启动docker服务\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看镜像: 查看本地所有的镜像")]),t._v("\ndocker images  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拉取镜像")]),t._v("\ndocker pull 镜像名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("版本号 \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除镜像")]),t._v("\ndocker rmi 镜像id\n")])])]),s("blockquote",[s("p",[t._v("容器相关命令")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" 表示docker容器开机自启\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看容器")]),t._v("\ndocker ps       ## 查看正在运行的容器\ndocker ps "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a    ## 查看所有容器 （包括没有运行的容器）\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建容器 但不进入容器 后台运行 可使用命令进入 且退出不会关闭容器  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --restart=always -> 表示docker容器开机自启")]),t._v("\ndocker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("容器名称 镜像名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("版本\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入容器")]),t._v("\ndocker exec "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("it 容器id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动容器 ")]),t._v("\ndocker start 容器名称\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 停止容器运行")]),t._v("\ndocker stop 容器名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除容器 运行状态则删除失败，需要停止容器才能删除")]),t._v("\ndocker rm 容器名称\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将主机/root/123.war文件拷贝到容器96f7f14e99ab的/root目录下")]),t._v("\ndocker cp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123.")]),t._v("war "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("96f")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7f")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14e99")]),t._v("ab"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\ndocker cp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Apai_File")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("app"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("wxpuls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar c90863cd35eb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将容器96f7f14e99ab的/www目录拷贝到主机的/tmp目录中")]),t._v("\ndocker cp  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("96f")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7f")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14e99")]),t._v("ab"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tmp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 容器安装命令")]),t._v("\napt update  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新源")]),t._v("\napt"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("get install vim  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 容器安装vim ")]),t._v("\n")])])]),s("h2",{attrs:{id:"项目-部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目-部署"}},[t._v("#")]),t._v(" 项目 部署")]),t._v(" "),s("h3",{attrs:{id:"war包部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#war包部署"}},[t._v("#")]),t._v(" war包部署")]),t._v(" "),s("blockquote",[s("p",[t._v("即 使用tomcat插件运行的项目")])]),t._v(" "),s("p",[t._v("1.先在IDEA 本地运行是否正常,")]),t._v(" "),s("p",[t._v("2.使用 package 打包 储存在 tager 目录下 .war")]),t._v(" "),s("p",[t._v("3.将 war 放入 tomcat 的 webapps 文件夹下")]),t._v(" "),s("p",[t._v("4.启动 tomcat 即可")]),t._v(" "),s("p",[t._v("5.在浏览器使用   ip地址:端口号/war包名  进行访问")]),t._v(" "),s("ul",[s("li",[t._v("http://192.168.174.128:8080/chaoshi/")])]),t._v(" "),s("p",[t._v("注意:")]),t._v(" "),s("blockquote",[s("p",[t._v("ieda 项目的过滤器为等于请求 在Linux系统里请求是带上了包名")]),t._v(" "),s("p",[t._v('则会被拦截导致无法登录 解决方法: 在过滤器 不是等于而是使用 uri.contains("/user/login") 包含')]),t._v(" "),s("p",[t._v("打包前使用的 tomcat 版本 需和Linux系统 的tomcat 版本一致")]),t._v(" "),s("p",[t._v("在访问时 必须带上war名 否则无法正常无法")])]),t._v(" "),s("h3",{attrs:{id:"jar包部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jar包部署"}},[t._v("#")]),t._v(" jar包部署")]),t._v(" "),s("blockquote",[s("p",[t._v("即 使用启动类 的项目")])]),t._v(" "),s("p",[t._v("1.将项目的 jar 包放入 Linux 系统里的任意文件夹下")]),t._v(" "),s("p",[t._v("2.使用  后台运行jar包  的指令启动   nohup java -jar XXX.jar &")]),t._v(" "),s("p",[t._v("3.在浏览器请求")]),t._v(" "),s("h3",{attrs:{id:"ngins-进行-项目部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ngins-进行-项目部署"}},[t._v("#")]),t._v(" ngins 进行 项目部署")]),t._v(" "),s("blockquote",[s("p",[t._v("Nginx是一款高性能的http 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器。")]),t._v(" "),s("p",[t._v("详见:  nginx.md")]),t._v(" "),s("p",[t._v("网址:  Nginx配置——反向代理")]),t._v(" "),s("p",[t._v("(https://blog.csdn.net/zxd1435513775/article/details/102508463)")])]),t._v(" "),s("p",[s("strong",[t._v("启动nginx")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进入sbin目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/nginx \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭nginx：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s stop\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推荐使用：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s quit\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重启nginx：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、先关闭后启动。 2、刷新配置文件：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("/nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s reload\n")])])]),s("p",[s("strong",[t._v("nginx配置文件")])]),t._v(" "),s("p",[t._v("打开Nginx的配置文件：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## vim  conf/nginx.conf")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("通过端口区分不同虚拟机")]),t._v(" "),s("p",[t._v("触发: 192.127.0.1:80")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 监听端口")]),t._v("\n    listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 监听 ip")]),t._v("\n    server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 监听到后执行")]),t._v("\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 相对路径的文件夹")]),t._v("\n    root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 文件夹内的index.html页面")]),t._v("\n    index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("81")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".174.130"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    location /api "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy_pass  http://192.168.174.130:8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        rewrite "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^/api/(.*)$"')]),t._v(" /"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         root   pai-erp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("说明：一个server节点就是一个虚拟主机，html是nginx安装目录下的html目录(静态页面存放的位置,也可以使用绝对路径)，可以配置多个server，配置了多个虚拟主机")])]),t._v(" "),s("ul",[s("li",[t._v("通过域名区分虚拟主机")])]),t._v(" "),s("h5",{attrs:{id:"nginx的配置-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx的配置-2"}},[t._v("#")]),t._v(" Nginx的配置")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index  index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"linux-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-安装"}},[t._v("#")]),t._v(" Linux 安装")]),t._v(" "),s("h3",{attrs:{id:"nginx-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-安装"}},[t._v("#")]),t._v(" nginx 安装")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("解压   tar  -zxvf nginx-1.8.0.tar.gz    解压后可改名")])]),t._v(" "),s("li",[s("p",[t._v("源码包的根目录下没有这个Makefile，那么源码包就会有一个configure可执行文件，这个文件的作用就是用来做环境检查和环境配置的 执行以下命令")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("./configure \\\n--prefix=/usr/local/nginx \\\n--pid-path=/var/run/nginx/nginx.pid \\\n--lock-path=/var/lock/nginx.lock \\\n--error-log-path=/var/log/nginx/error.log \\\n--http-log-path=/var/log/nginx/access.log \\\n--with-http_gzip_static_module \\\n--http-client-body-temp-path=/var/temp/nginx/client \\\n--http-proxy-temp-path=/var/temp/nginx/proxy \\\n--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \\\n--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \\\n--http-scgi-temp-path=/var/temp/nginx/scgi\n")])])]),s("ul",[s("li",[t._v("然后返现检查失败，需要一些依赖包")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum install -y pcre pcre-devel\nyum install -y zlib zlib-devel\nyum install -y openssl openssl-devel\n")])])]),s("ul",[s("li",[t._v("然后再检查，通过了")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("make &&  make install \n")])])]),s("ul",[s("li",[s("p",[t._v("编译")]),t._v(" "),s("p",[t._v("make     在源码包的根目录下执行make命令即可")])]),t._v(" "),s("li",[s("p",[t._v("安装")]),t._v(" "),s("p",[t._v("make install      在源码包的根目录下执行make install命令即可")])])]),t._v(" "),s("ul",[s("li",[s("h6",{attrs:{id:"源码包的卸载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源码包的卸载"}},[t._v("#")]),t._v(" 源码包的卸载")]),t._v(" "),s("p",[t._v("直接删除这个安装目录即可")])])]),t._v(" "),s("h3",{attrs:{id:"源码包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源码包"}},[t._v("#")]),t._v(" 源码包")]),t._v(" "),s("blockquote",[s("p",[t._v("定义：就是程序员开发出来的包，没有编译的包。")]),t._v(" "),s("p",[t._v("优点：所以我们可以去改源码")]),t._v(" "),s("p",[t._v("缺点：所以安装的时候要先编译,然后再安装，这个过程要长些")]),t._v(" "),s("p",[t._v("源码包：一般来说，包里面会有一个src目录，该目录里面放源码")])]),t._v(" "),s("p",[s("strong",[t._v("源码包的安装")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("检查当前的系统是否有必备的安装环境")])]),t._v(" "),s("li",[s("p",[t._v("解压  tar  -zxvf  包名")]),t._v(" "),s("blockquote",[s("p",[t._v("当我们要编译一个源码包的时候，一定要看看这个源码包里面是否有一个Makefile文件，因为编译的时候需要这个文件，这个文件的作用就是把一些安装配置写到这个文件的。")])])]),t._v(" "),s("li",[s("p",[t._v("如果有，则可以直接编译，当然在编译之前还要看看是否有c语言的编译器。")]),t._v(" "),s("blockquote",[s("p",[t._v("如果有，则可以直接编译，当然在编译之前还要看看是否有c语言的编译器。如果没有编译器，则要先安装")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum  -y   install   gcc-c++\n\n注意：有可能第一次没装成功，那么就需要清一下缓存\nmake  distclean  清缓存\n")])])])]),t._v(" "),s("li",[s("p",[t._v("如果没有编译器，则要先安装")]),t._v(" "),s("blockquote",[s("p",[t._v("如果没有这个文件，那么就不能直接编译，必须要先生成这个文件，那么怎么生成？")]),t._v(" "),s("p",[t._v("如：安装nginx，发现源码包的根目录下没有这个Makefile，那么源码包就会有一个configure可执行文件，这个文件的作用就是用来做环境检查和环境配置的")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("./configure \\\n--prefix=/usr/local/nginx \\\n--pid-path=/var/run/nginx/nginx.pid \\\n--lock-path=/var/lock/nginx.lock \\\n--error-log-path=/var/log/nginx/error.log \\\n--http-log-path=/var/log/nginx/access.log \\\n--with-http_gzip_static_module \\\n--http-client-body-temp-path=/var/temp/nginx/client \\\n--http-proxy-temp-path=/var/temp/nginx/proxy \\\n--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \\\n--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \\\n--http-scgi-temp-path=/var/temp/nginx/scgi\n")])])]),s("p",[t._v("然后返现检查失败，需要一些依赖包")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum install -y pcre pcre-devel\nyum install -y zlib zlib-devel\nyum install -y openssl openssl-devel\n")])])]),s("p",[t._v("然后再检查，通过了")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("make &&  make install \n")])])])]),t._v(" "),s("li",[s("p",[t._v("编译")]),t._v(" "),s("p",[t._v("make     在源码包的根目录下执行make命令即可")])]),t._v(" "),s("li",[s("p",[t._v("安装")]),t._v(" "),s("p",[t._v("make install      在源码包的根目录下执行make install命令即可")])])]),t._v(" "),s("ul",[s("li",[s("h6",{attrs:{id:"源码包的卸载-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源码包的卸载-2"}},[t._v("#")]),t._v(" 源码包的卸载")]),t._v(" "),s("p",[t._v("直接删除这个安装目录即可")])])]),t._v(" "),s("h3",{attrs:{id:"脚本包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚本包"}},[t._v("#")]),t._v(" 脚本包")]),t._v(" "),s("blockquote",[s("p",[t._v("它其实是源码包中的一种，类似于window的软件安装。我们只需要找到这个脚本包的bin目录，去执行一个脚本文件。一般来说叫  startup.sh  例如：tomcat")])]),t._v(" "),s("h3",{attrs:{id:"rpm包-二进制包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rpm包-二进制包"}},[t._v("#")]),t._v(" rpm包（二进制包)")]),t._v(" "),s("blockquote",[s("p",[t._v("二进制包也叫rpm(redhat  package  manager), 包名一般来说以.rpm结尾")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("httpd-2.4.6-88.el7.centos.x86_64.rpm \n\n包名：httpd\n包版本：2.4.6\n包发布了多少次：88\n包的依赖环境  el7.centos.x86_64\n包的后缀后：.rpm \n\nhttpd-2.4.6-88.el7.centos.x86_64.rpm  整个包全名\n")])])]),s("blockquote",[s("p",[t._v("rpm包安装起来是最复杂的，因为他的依赖太多。")])]),t._v(" "),s("ul",[s("li",[t._v("检查一下当前系统是否已经装过这个软件包")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("rpm  -qa   查询当前已经安装了哪些rpm包\nrpm  -qa  |  grep httpd\n")])])]),s("ul",[s("li",[t._v("卸载rpm包")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("rpm  -e  包名\n")])])]),s("ul",[s("li",[t._v("安装一个rpm包")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("rpm   -ivh   （install  verbose  hash ）   包全名\n")])])]),s("ul",[s("li",[t._v("包升级")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("rpm -Uvh  包全名\n")])])]),s("h3",{attrs:{id:"yum安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yum安装"}},[t._v("#")]),t._v(" yum安装")]),t._v(" "),s("blockquote",[s("p",[t._v("当我们用yum去安装一个软件或者是一个命令，那么在我们的linux系统中有一个yum源文件，这个文件就是保存了yum的中央仓库地址，这个文件在/etc/yum.repos.d/目录下，你看到了很多文件，其中有一个yum中央仓库文件，叫CentOS-Base.repo，当然这里还有其他的文件，可以用来配置本地yum源")])]),t._v(" "),s("ul",[s("li",[t._v("查询")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum   list  | grep  你的包名\n")])])]),s("p",[t._v("注意：yum不存在包名和包全名的概念，统一叫包名")]),t._v(" "),s("p",[t._v("如：安装 httpd")]),t._v(" "),s("ul",[s("li",[t._v("安装")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum -y  install  httpd  ###这个httpd就是包名\n\n如：  yum -y install  vim\n")])])]),s("p",[t._v("有些软件在这个yum源的中央仓库并没有这个包，那么要去下载专业的yum源。把这个专业的yum源安装了，再可以安装某个包")]),t._v(" "),s("p",[t._v("如：安装mysql")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("先检查有没有安装过mysql\nrpm  -qa| grep mysql,如果安装过就卸载\n")])])]),s("p",[t._v("我们安装专业的yum源")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum localinstall mysql-community-release-el5-5.noarch.rpm \n \n#这个mysql-community-release-el5-5.noarch.rpm 就是一个yum源\n")])])]),s("ul",[s("li",[t._v("升级")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum  -y update  包名\n")])])]),s("ul",[s("li",[t._v("卸载")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum  -y remove 包名\n")])])]),s("h3",{attrs:{id:"工具-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工具-安装"}},[t._v("#")]),t._v(" 工具 安装")]),t._v(" "),s("h4",{attrs:{id:"jdk-的安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk-的安装"}},[t._v("#")]),t._v(" jdk 的安装")]),t._v(" "),s("p",[t._v("1.将压缩包放入 root 文件夹内")]),t._v(" "),s("ul",[s("li",[t._v("tar  -zxvf  包名")])]),t._v(" "),s("p",[t._v("2.解压改名为 jdk8")]),t._v(" "),s("ul",[s("li",[t._v("rm 原名 新名")])]),t._v(" "),s("p",[t._v("3.vim /etc/profile 修改配置文件")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("末尾添加")])]),t._v(" "),s("li",[s("p",[t._v("export JAVA_HOME=/usr/local/btjdk/jdk8")])]),t._v(" "),s("li",[s("p",[t._v("export PATH=$JAVA_HOME/bin:$PATH")])])]),t._v(" "),s("p",[t._v("4.source /etc/profile 刷新")]),t._v(" "),s("p",[t._v("5.验证是否安装成功  java  javac  如出现一大串即成功")]),t._v(" "),s("h4",{attrs:{id:"tomcan8-的安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tomcan8-的安装"}},[t._v("#")]),t._v(" tomcan8 的安装")]),t._v(" "),s("p",[t._v("前提需安装 jdk")]),t._v(" "),s("p",[t._v("1.将压缩包放入 root 文件夹内")]),t._v(" "),s("p",[t._v("2.解压改名为 tomcan8")]),t._v(" "),s("p",[t._v("3.执行   /root/tomcat9/bin 目录下   ./startup.sh")]),t._v(" "),s("p",[t._v("4.查看端口   netstat -tlnp")]),t._v(" "),s("p",[t._v("5.关闭防火墙   systemctl stop  firewalld.service")]),t._v(" "),s("p",[t._v("6.在浏览器 根据ip地址和端口进行连接")]),t._v(" "),s("h4",{attrs:{id:"mysql-版本5-6安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-版本5-6安装"}},[t._v("#")]),t._v(" Mysql 版本5.6安装")]),t._v(" "),s("blockquote",[s("p",[t._v("如遇出错: 备用 "),s("a",{attrs:{href:"https://www.cnblogs.com/lenny-z/p/15666149.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("linux安装 mysql >>http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm - 御本美琴初号机 - 博客园 (cnblogs.com)")])])]),t._v(" "),s("blockquote",[s("p",[t._v("宝塔: "),s("a",{attrs:{href:"https://blog.csdn.net/weixin_44893902/article/details/121242965",target:"_blank",rel:"noopener noreferrer"}},[t._v("(9条消息) 如何使用Navicat连接宝塔面板上安装的mysql数据库？_明金同学的博客-CSDN博客_navicat连接宝塔mysql")])])]),t._v(" "),s("p",[t._v("1.先检查有没有安装过mysql")]),t._v(" "),s("ul",[s("li",[t._v("rpm  -qa| grep mysql,如果安装过就卸载")])]),t._v(" "),s("p",[t._v("2.安装专业的yum源")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("执行 yum localinstall mysql-community-release-el5-5.noarch.rpm")])]),t._v(" "),s("li",[s("p",[t._v("mysql-community-release-el5-5.noarch.rpm 就是一个yum源文件")])])]),t._v(" "),s("p",[t._v("3.安装mysql的服务端")]),t._v(" "),s("ul",[s("li",[t._v("yum install mysql-community-server")])]),t._v(" "),s("p",[t._v("4.开启mysql的服务")]),t._v(" "),s("ul",[s("li",[t._v("service  mysqld start")])]),t._v(" "),s("p",[t._v("5.然后设置密码")]),t._v(" "),s("ul",[s("li",[t._v("/usr/bin/mysqladmin -u root password 'root'")])]),t._v(" "),s("p",[t._v("6.登录")]),t._v(" "),s("ul",[s("li",[t._v("mysql  -uroot -p123456")])]),t._v(" "),s("p",[t._v("7.查看")]),t._v(" "),s("ul",[s("li",[t._v("Mysql > show databases;  查看表 注意: 分号 '  ;  '")]),t._v(" "),s("li",[t._v("Mysql > exit 退出")])]),t._v(" "),s("p",[t._v("8.开启mysql远程访问权限")]),t._v(" "),s("ul",[s("li",[t._v("Mysql > grant all privileges on "),s("em",[t._v(".")]),t._v(" to 'root'@'%' identified by '102528' with grant option;")]),t._v(" "),s("li",[t._v("Mysql > flush privileges;    刷新数据库配置")]),t._v(" "),s("li",[t._v("Mysql > exit; 退出")])]),t._v(" "),s("p",[t._v("9.Navicat Premium 12 进行连接")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://apaiimages.oss-cn-guangzhou.aliyuncs.com/MD/image-20220622203106853.png",alt:"image-20220622203106853"}})]),t._v(" "),s("h2",{attrs:{id:"docker-应用部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-应用部署"}},[t._v("#")]),t._v(" Docker 应用部署")]),t._v(" "),s("h3",{attrs:{id:"_1-mysql-部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql-部署"}},[t._v("#")]),t._v(" 1.mysql  部署")]),t._v(" "),s("p",[t._v("1、搜索mysql镜像")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker search mysql")]),t._v("\n")])])]),s("p",[t._v("2、拉取mysql镜像")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker pull mysql:5.6")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker pull mysql:8.0.25")]),t._v("\n")])])]),s("p",[t._v("3、创建目录  在/root目录下创建mysql目录用于存储mysql数据信息")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#mkdir mysql")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#cd mysql")]),t._v("\n")])])]),s("p",[t._v("4、创建容器，设置端口映射和目录映射")]),t._v(" "),s("blockquote",[s("p",[t._v("此段为一句话 注意最后面为 版本号 未镜像则会先下载镜像")]),t._v(" "),s("p",[t._v("-p 3307:3306 --\x3e 3307 被 容器的数据库3306端口映射 外部可通过宿主机3307端口访问")]),t._v(" "),s("p",[t._v("-e MYSQL_ROOT_PASSWORD=root  --\x3e  在创建容器进行写入配置")]),t._v(" "),s("p",[t._v("注意: mysql 8.0.25 连接外部需开启远程访问 对照下方解决方法")])]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("docker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 3307:3306 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name=c_mysql "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("restart=always "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("logs:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lib"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e MYSQL_ROOT_PASSWORD=root mysql:8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("25\n\ndocker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 3307:3306 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name=Apai_mysql "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("restart=always "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Apai_File"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Apai_File"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("logs:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Apai_File"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lib"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e MYSQL_ROOT_PASSWORD=root mysql:8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("25\n\ndocker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 3307:3306 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name=Apai_mysql "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("restart=always "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e MYSQL_ROOT_PASSWORD=root mysql:8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("25\n")])])]),s("blockquote",[s("p",[t._v("1、 -p 3307:3306  将容器的 3306 端口映射到宿主机的 3307端口\n2、-v /root/mysql/conf:/etc/mysql/conf.d 将宿主机当前mysql目录里面的 conf目录挂载到容器的 /etc/mysql/conf.d目录下，在mysql5的版本中，mysql容器启动默认加载 /etc/mysql/mysql.cnf配置文件，这个文件没有什么内容，只是文件的末尾有2句\n!includedir /etc/mysql/conf.d/和!includedir /etc/mysql/mysql.conf.d/，表示这两个目录里面的文件都可以作为参数文件，mysql会读取这两个目录里面的.cnf结尾的文件，而/etc/mysql/conf.d/目录里面虽然有以.cnf 末尾结尾的文件，但是都没内容，所以我们把这个目录conf.d和宿主机的/root/mysql/conf做一个映射，那么在宿主机的该目录下放一些*.cnf文件会同步到/etc/mysql/conf.d就可以作为mysql的参数文件了，一旦做了映射，那么etc/mysql/conf.d目录就为空了。另外 /etc/mysql/mysql.conf.d/目录的下有mysql的参数文件 mysqld.cnf，这个文件配置了mysql启动时的进程id，datadir数据目录等")]),t._v(" "),s("p",[t._v("3、容器的mysql启动后，日志文件保存在/var/log/mysql目录里\n4、容器的mysql启动后，数据库文件保存在/var/lib/mysql目录里 会同步到宿主机目录")])]),t._v(" "),s("p",[t._v("当然我们也可以不用挂载")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run -id -p 3307:3306 --name=c_mysql -e MYSQL_ROOT_PASSWORD=root mysql:5.6")]),t._v("\n")])])]),s("p",[s("strong",[t._v("navicat连接; ip地址 端口为 3307")])]),t._v(" "),s("p",[s("strong",[t._v("安装mysql8版本")])]),t._v(" "),s("p",[t._v("如果是8.0.25的数据库，navicat连接报错1251-Client does not support")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 创建容器 未挂载\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run -id -p 1001:3306  --name=c_mysql --restart=always -e MYSQL_ROOT_PASSWORD=root mysql:8.0.25")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 进入容器\n"),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker exec -it Apai_mysql /bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 在容器内 登录数据库\nroot@053f48be0dc7:~"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## mysql -uroot -proot")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 设置远程客户端（如navicat）连接的密码，不是mysql服务器的登录密码\nmysql> ALTER USER "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%'")]),t._v(" IDENTIFIED WITH mysql_native_password BY "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lj102528@'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("使用外部机器连接容器中的mysql")]),t._v(" "),s("blockquote",[s("p",[t._v("记一次mysql启动报错。查看日志报错为：")]),t._v(" "),s("p",[t._v("Can't open and lock privilege tables: Table storage engine for 'user'")]),t._v(" "),s("p",[t._v("方案：将datadir路径下的文件清空，然后执行如下命令：")]),t._v(" "),s("p",[t._v("mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql")]),t._v(" "),s("p",[t._v("然后重启：service mysql start")])]),t._v(" "),s("h3",{attrs:{id:"_2-tomcat-部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-tomcat-部署"}},[t._v("#")]),t._v(" 2.Tomcat  部署")]),t._v(" "),s("p",[t._v("1、搜索tomcat镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker search tomcat")]),t._v("\n")])])]),s("p",[t._v("2、拉取tomcat镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker pull tomcat:8")]),t._v("\n")])])]),s("p",[t._v("3、创建容器，设置端口映射、目录映射")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 在/root目录下创建tomcat目录用于存储tomcat数据信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## mkdir tomcat")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## cd tomcat")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run -id --name=c_tomcat -p 8080:8080 -v $PWD:/usr/local/tomcat/webapps tomcat:8")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("参数说明：")]),t._v(" "),s("p",[t._v("-p 8080:8080：将容器的8080端口映射到主机的8080端口  （第一个8080是宿主机端口用来和tomcat做映射的，第二个8080是容器启动tomcat端口8080，第二个端口是tomcat容器默认启动的端口）\n-v $PWD:/usr/local/tomcat/webapps：将主机中当前目录挂载到容器的webapps")])]),t._v(" "),s("p",[t._v("4、使用外部机器访问tomcat")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在宿主机目录/root/tomcat下创建test目录。并在test目录下创建index.html。那么test目录会同步到c_tomcat容器的 /usr/local/tomcat/webapps里面")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## mkdir test\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## cd test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@localhost")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("## vim index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html #在index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html里面编写 "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("hello tomcat"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("浏览器测试访问：")]),t._v(" "),s("p",[t._v("http://192.168.128.130:8080/test/index.html")]),t._v(" "),s("h3",{attrs:{id:"_3-nginx-部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-nginx-部署"}},[t._v("#")]),t._v(" 3.Nginx  部署")]),t._v(" "),s("p",[t._v("1、搜索nginx镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker search nginx")]),t._v("\n")])])]),s("p",[t._v("2、拉取nginx镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker pull nginx")]),t._v("\n")])])]),s("p",[t._v("3、创建目录")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#mkdir nginx")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#cd nginx")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#mkdir conf")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#cd conf")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#vim nginx.conf")]),t._v("\n")])])]),s("p",[t._v("4、编写nginx.conf配置文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("user  nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nworker_processes  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nerror_log  /var/log/nginx/error.log warn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npid        /var/run/nginx.pid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    worker_connections  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    include       /etc/nginx/mime.types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    default_type  application/octet-stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    log_format  main  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"$http_user_agent" "$http_x_forwarded_for"\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    access_log  /var/log/nginx/access.log  main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    sendfile        on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    keepalive_timeout  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    include /etc/nginx/conf.d/*.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("说明：")]),t._v(" "),s("p",[t._v("第四步其实可以省略，默认创建一个nginx容器，会在/etc/nginx/目录下生成一个叫nginx.conf的配置文件，nginx容器启动会去加载该文件，该文件的内容和第四步配置文件的内容相同。这个文件的末尾有include /etc/nginx/conf.d/*.conf;这句话，也就说在conf.d目录下并且以conf结尾的文件都会被加载，而这个目录下只有一个配置文件就是default.conf，default.conf文件的内容配置了一个server节点，以及默认访问nginx的目录和首页（/html/index.html）")])]),t._v(" "),s("p",[t._v("5、创建nginx容器、端口映射、目录挂载")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[root@localhost ~]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run -id --name=c_nginx \\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 80:80 \\\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf \\  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不挂载这个配置文件也是可以的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("logs:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx \\                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx容器默认的日志文件保存到/var/log/nginx目录下")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("share"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html \\             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx默认会去访问/usr/share/nginx/html下的index.html")]),t._v("\nnginx\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" nginx的配置文件也可以进行 挂载 否则使用vim在容器进行修改\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d\n\ndocker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name=c_nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 80:80 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("logs:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("share"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html nginx\n\ndocker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name=c_nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 81:80 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 8004:8004 nginx\n")])])]),s("blockquote",[s("p",[t._v("如果你不想挂载，所有的都可以不挂载，如果所有的都不挂载，默认情况，当创建nginx容器时，在/etc/nginx/目录下有nginx.conf这个文件，这个文件是nginx的配置文件，nginx容器启动的时候会去读这个配置文件")])]),t._v(" "),s("p",[t._v("6、在宿主机的/root/nginx/html目录下新建 index.html，让其同步到/usr/share/nginx/html目录下")]),t._v(" "),s("p",[t._v("测试访问：http://192.168.128.130/")]),t._v(" "),s("h3",{attrs:{id:"_4-redis-部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-redis-部署"}},[t._v("#")]),t._v(" 4.Redis  部署")]),t._v(" "),s("p",[t._v("1、搜索redis镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker search redis")]),t._v("\n")])])]),s("p",[t._v("2、拉取redis镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker pull redis:5.0")]),t._v("\n")])])]),s("p",[t._v("3、创建容器，设置端口映射")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#docker run -id --name=Apai_redis -p 6379:6379 --restart=always --restart=always redis:5.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#docker run -id --name=c_redis2 -p 6380:6380 -v /root/redis/conf/redis.conf:/usr/local/bin/myredis.conf redis:5.0 /bin/bash -c "redis-server /usr/local/bin/myredis.conf"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##把宿主机的redis.conf的port 改成port 6380")]),t._v("\n\ndocker run -id --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Apai_redis -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v(":6379 --restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always -v /Apai_File/redis/conf/redis.conf:/usr/local/bin/myredis.conf redis:5.0 /bin/bash -c "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis-server /usr/local/bin/myredis.conf"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##把宿主机的redis.conf的port 改成port 6380")]),t._v("\ndocker run -id --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Apai_redis -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6380")]),t._v(":6379 --restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always redis:5.0 /bin/bash -c "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis-server /usr/local/bin/myredis.conf"')]),t._v("\n")])])]),s("p",[t._v("4、使用外部机器连接redis")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#./redis-cli.exe -h 192.168.149.135 -p 6379")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-rabbitmq-消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-rabbitmq-消息队列"}},[t._v("#")]),t._v(" 5.RabbitMq 消息队列")]),t._v(" "),s("p",[s("strong",[t._v("注意:")])]),t._v(" "),s("p",[t._v("在java配置连接 消息队列  设置虚拟主机为:")]),t._v(" "),s("p",[t._v("1.拉去rabbitMq镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker pull rabbitmq:management\n")])])]),s("p",[t._v("2.创建rabbitmq相关挂载目录")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /root/local/rabbitmq/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data,conf,log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("3.创建完成之后要对所创建文件授权权限，都设置成777 否则在启动容器的时候容易失败")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" -R "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("777")]),t._v(" /root/local/rabbitmq\n")])])]),s("p",[t._v("4.镜像创建和启动容器")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker run --privileged"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),t._v(":5672 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15672")]),t._v(":15672 --name rabbitmq -v /root/local/rabbitmq/data:/var/lib/rabbitmq -v /root/local/rabbitmq/conf:/etc/rabbitmq -v /root/local/rabbitmq/log:/var/log/rabbitmq --restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always --hostname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("rabbitmqhost -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RABBITMQ_DEFAULT_VHOST")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("my_vhost -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RABBITMQ_DEFAULT_USER")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RABBITMQ_DEFAULT_PASS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin rabbitmq\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 解析    ")]),t._v("\n端口映射 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),t._v(":5672 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15672")]),t._v(":15672\n容器名称 --name rabbitmq \n设置用户密码及镜像名 -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RABBITMQ_DEFAULT_USER")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RABBITMQ_DEFAULT_PASS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin rabbitmq\n")])])]),s("p",[t._v("5.进入容器")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it rabbitmq "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),s("p",[t._v("6.开启web管理端")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("rabbitmq-plugins "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" rabbitmq_management\n")])])]),s("p",[t._v("附加:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".首先进入容器 docker "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it rabbitmq /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(".创建用户 rabbitmqctl add_user admin1 admin1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(".给用户授权角色 rabbitmqctl set_user_tags admin1 administrator\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(".给用户添加权限 rabbitmqctl set_permissions -p / admin1 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v("\n")])])]),s("p",[t._v("页面访问: http://192.168.174.133:15672")]),t._v(" "),s("h3",{attrs:{id:"_6-nacos-注册中心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-nacos-注册中心"}},[t._v("#")]),t._v(" 6.Nacos 注册中心")]),t._v(" "),s("p",[t._v("https://blog.csdn.net/u013305864/article/details/125611099")]),t._v(" "),s("p",[t._v("编写docker-compose.yml文件   启动该文件 命令： docker-compose up")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nacos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nacos/nacos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nacos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" PREFER_HOST_MODE=hostname\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MODE=standalone   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单机模式启动")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./8848/logs/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/home/nacos/logs   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#前面是宿主机名  后面是容器目录名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./8848/init.d/custom.properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/home/nacos/init.d/custom.properties\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8848:8848"')]),t._v("\n\n")])])]),s("p",[t._v("nacos 的默认服务端口是 "),s("strong",[t._v("8848")]),t._v(" ，启动完成之后通过浏览器访问 nacos：http://127.0.0.1:8848/nacos 。")]),t._v(" "),s("p",[s("strong",[t._v("第一种")]),t._v("（不推荐，因为不能连接数据库，进行持久化）")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#搜索可以使用的镜像")]),t._v("\ndocker search nacos\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#拉取镜像")]),t._v("\ndocker pull nacos/nacos-server\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 运行nacos  挂载  --restart=always -> 表示docker容器开机自启")]),t._v("\ndocker  run --name nacos -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v(":8848 --privileged"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true --restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("JVM_XMS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("256m -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("JVM_XMX")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("256m -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MODE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("standalone -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PREFER_HOST_MODE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("hostname -v /data/nacos/logs:/home/nacos/logs -v /data/nacos/conf:/home/nacos/conf nacos/nacos-server\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 不挂载 --restart=always -> 表示docker容器开机自启")]),t._v("\ndocker run --name Apai_nacos -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v(":8848 --privileged"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true --restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("JVM_XMS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("256m -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("JVM_XMX")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("256m -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MODE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("standalone -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PREFER_HOST_MODE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("hostname nacos/nacos-server\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#--restart=always 开机启动")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#检查是否启动")]),t._v("\ndocker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问地址 默认账号密码是nacos/nacos")]),t._v("\nhttp://ip:8848/nacos\nhttp://175.178.126.61:8848/nacos\n")])])]),s("p",[t._v("第二种（强烈推荐用这种方式，因为可以持久化数据到数据库中，就算nacos容器出现了问题，数据也不受影响）\n创建数据库脚本\nhttps://github.com/alibaba/nacos/blob/master/config/src/main/resources/META-INF/nacos-db.sql")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#推荐使用这种方式，可以连接自己的数据库")]),t._v("\ndocker run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v(":8848 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9848")]),t._v(":9848 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--name nacos "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--env "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MODE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("standalone "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--env "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("SPRING_DATASOURCE_PLATFORM")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mysql "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--env "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MYSQL_SERVICE_HOST")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.12 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--env "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MYSQL_SERVICE_PORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--env "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MYSQL_SERVICE_DB_NAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nacos "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--env "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MYSQL_SERVICE_USER")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("root "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--env "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MYSQL_SERVICE_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("wisesoft "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nnacos/nacos-server:latest\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问地址 默认账号密码是nacos/nacos")]),t._v("\nhttp://ip:8848/nacos\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -------- 补充 -----------")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拉取指定版本的nacos https://blog.csdn.net/weixin_41798072/article/details/125945878")]),t._v("\ndocker pull nacos"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nacos"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.4")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不挂载 --restart=always -> 表示docker容器开机自启")]),t._v("\ndocker run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Apai_nacos")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("privileged"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("restart"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e JVM_XMS"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e JVM_XMX"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e MODE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("standalone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e PREFER_HOST_MODE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("hostname nacos"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nacos"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.4")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("\n")])])]),s("h3",{attrs:{id:"_7-minio-对象存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-minio-对象存储"}},[t._v("#")]),t._v(" 7.Minio 对象存储")]),t._v(" "),s("p",[s("strong",[t._v("拉取 minio 镜像")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// minio 文件对象存储 类似阿里云oss")]),t._v("\ndocker pull minio"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("minio \n")])])]),s("p",[s("strong",[t._v("创建 minio 容器")])]),t._v(" "),s("ul",[s("li",[t._v('--console-address ":9000" 表示minio的 前端页面的端口')]),t._v(" "),s("li",[t._v('--address ":9090" 表示minio的文件上传API 的端口 | 在yml 需配置 9090')])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker run -id --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("minio -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),t._v(":9000 -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9090")]),t._v(":9090 -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MINIO_PROMETHEUS_AUTH_TYPE=public"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MINIO_ROOT_USER=minioadmin"')]),t._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MINIO_ROOT_PASSWORD=minioadmin"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-v /mnt/minio/data:/data -v /mnt/minio/config:/root/.minio minio/minio server /data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--console-address "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":9000"')]),t._v(" --address "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":9090"')]),t._v("\n")])])]),s("blockquote",[s("p",[t._v('--console-address ":9000" --address ":9090"  docker使用静态的固定端口，以避免启动时使用随机端口')])]),t._v(" "),s("p",[t._v("浏览器访问：192.168.128.128:9000")]),t._v(" "),s("p",[t._v("java上传:  9090")])])}),[],!1,null,null,null);a.default=n.exports}}]);